{"version":3,"file":"useTrendsData-Gv1SEVWE.js","sources":["../../app/javascript/api/resources/trends.ts","../../app/javascript/hooks/useTrendsData.ts"],"sourcesContent":["/**\n * Typed API functions for trends resource\n */\n\nimport { apiGet } from '../client'\nimport { endpoints } from '../endpoints'\nimport type { ApiResponse } from '../../types/api'\n\nexport interface TrendsDataResponse {\n  current_date: string\n  current_month_income: number\n  current_month_expenses: number\n  net_savings: number\n  last_month_income: number\n  last_month_expenses: number\n  income_change_pct: number\n  expense_change_pct: number\n  net_change_pct: number\n  active_recurring_count: number\n  top_merchant: {\n    name: string\n    amount: number\n  }\n}\n\n/**\n * Get trends data\n */\nexport async function getTrendsData(): Promise<ApiResponse<TrendsDataResponse>> {\n  return apiGet<TrendsDataResponse>(endpoints.trends.data())\n}\n\n","/**\n * React Query hook for trends data\n */\n\nimport { useApiQuery } from './useApi'\nimport { getTrendsData } from '../api/resources/trends'\nimport type { TrendsDataResponse } from '../api/resources/trends'\n\n/**\n * Fetch trends data with React Query\n */\nexport function useTrendsData() {\n  return useApiQuery<TrendsDataResponse>(\n    ['trends', 'data'],\n    () => getTrendsData(),\n    {\n      staleTime: 1000 * 60 * 5 // 5 minutes\n    }\n  )\n}\n\n"],"names":["getTrendsData","apiGet","endpoints","useTrendsData","useApiQuery"],"mappings":"0DA4BA,eAAsBA,GAA0D,CAC9E,OAAOC,EAA2BC,EAAU,OAAO,KAAA,CAAM,CAC3D,CCnBO,SAASC,GAAgB,CAC9B,OAAOC,EACL,CAAC,SAAU,MAAM,EACjB,IAAMJ,EAAA,EACN,CACE,UAAW,IAAO,GAAK,CAAA,CACzB,CAEJ"}