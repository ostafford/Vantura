{"version":3,"file":"endpoints-s3-HOZU7.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.js","../../node_modules/react/jsx-runtime.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/@tanstack/react-query/build/modern/useMutation.js","../../app/javascript/providers/QueryProvider.tsx","../../app/javascript/components/shared/ErrorBoundary.tsx","../../app/javascript/hooks/useApi.ts","../../app/javascript/api/client.ts","../../app/javascript/api/endpoints.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nimport { systemSetTimeoutZero } from \"./timeoutManager.js\";\nvar defaultScheduler = systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        if (key === \"promise\") {\n          this.trackProp(\"data\");\n          if (!this.options.experimental_prefetchInRender && this.#currentThenable.status === \"pending\") {\n            this.#currentThenable.reject(\n              new Error(\n                \"experimental_prefetchInRender feature flag is not enabled\"\n              )\n            );\n          }\n        }\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #client;\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.#client = config.client;\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    const mutationFnContext = {\n      client: this.#client,\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables, mutationFnContext);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this,\n          mutationFnContext\n        );\n        const context = await this.options.onMutate?.(\n          variables,\n          mutationFnContext\n        );\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSettled?.(\n        data,\n        null,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      client,\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const onMutateResult = this.#currentResult.context;\n        const context = {\n          client: this.#client,\n          meta: this.options.meta,\n          mutationKey: this.options.mutationKey\n        };\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(\n            action.data,\n            variables,\n            onMutateResult,\n            context\n          );\n          this.#mutateOptions.onSettled?.(\n            action.data,\n            null,\n            variables,\n            onMutateResult,\n            context\n          );\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(\n            action.error,\n            variables,\n            onMutateResult,\n            context\n          );\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            onMutateResult,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const MIN_SUSPENSE_TIME_MS = 1e3;\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS\n      );\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const client = useQueryClient(queryClient);\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map","/**\n * React Query provider wrapper\n * Provides React Query context to all React islands\n */\n\nimport React from 'react'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\n\n// Create a query client with default options\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      gcTime: 1000 * 60 * 10 // 10 minutes (formerly cacheTime)\n    },\n    mutations: {\n      retry: 1\n    }\n  }\n})\n\ninterface QueryProviderProps {\n  children: React.ReactNode\n}\n\n/**\n * QueryProvider component - wraps children with React Query context\n */\nexport function QueryProvider({ children }: QueryProviderProps): React.JSX.Element {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  )\n}\n\n/**\n * Get the default query client instance\n * Useful for programmatic access outside React components\n */\nexport function getQueryClient(): QueryClient {\n  return queryClient\n}\n\n","/**\n * Error boundary for React islands\n * Catches errors in React component tree and displays fallback UI\n */\n\nimport React, { Component, ReactNode } from 'react'\n\ninterface Props {\n  children: ReactNode\n  fallback?: ReactNode\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\ninterface State {\n  hasError: boolean\n  error: Error | null\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      hasError: false,\n      error: null\n    }\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return {\n      hasError: true,\n      error\n    }\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    // Log error to console\n    console.error('[ErrorBoundary] Error caught:', error, errorInfo)\n\n    // Call optional error handler\n    this.props.onError?.(error, errorInfo)\n  }\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback\n      }\n\n      // Default fallback UI\n      return (\n        <div className=\"p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\n          <div className=\"flex items-start\">\n            <div className=\"flex-shrink-0\">\n              <svg\n                className=\"h-5 w-5 text-red-400\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div className=\"ml-3 flex-1\">\n              <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">\n                Something went wrong\n              </h3>\n              <div className=\"mt-2 text-sm text-red-700 dark:text-red-300\">\n                <p>\n                  {this.state.error?.message || 'An unexpected error occurred'}\n                </p>\n              </div>\n              <div className=\"mt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.setState({ hasError: false, error: null })\n                    window.location.reload()\n                  }}\n                  className=\"inline-flex items-center rounded-md bg-red-50 dark:bg-red-900/50 px-2.5 py-1.5 text-sm font-semibold text-red-600 dark:text-red-400 shadow-sm hover:bg-red-100 dark:hover:bg-red-900/70 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600\"\n                >\n                  Reload page\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\n","/**\n * Custom hooks for API calls using React Query\n */\n\nimport { useQuery, useMutation, useQueryClient, UseQueryOptions, UseMutationOptions } from '@tanstack/react-query'\nimport type { ApiResponse, ApiError } from '../types/api'\n\n/**\n * Generic hook for GET requests\n */\nexport function useApiQuery<T>(\n  queryKey: readonly unknown[],\n  queryFn: () => Promise<ApiResponse<T>>,\n  options?: Omit<UseQueryOptions<ApiResponse<T>, ApiError, ApiResponse<T>, readonly unknown[]>, 'queryKey' | 'queryFn'>\n) {\n  return useQuery({\n    queryKey,\n    queryFn,\n    ...options\n  } as UseQueryOptions<ApiResponse<T>, ApiError, ApiResponse<T>, readonly unknown[]>)\n}\n\n/**\n * Generic hook for mutations (POST, PATCH, PUT, DELETE)\n */\nexport function useApiMutation<TData, TVariables>(\n  mutationFn: (variables: TVariables) => Promise<ApiResponse<TData>>,\n  options?: Omit<UseMutationOptions<ApiResponse<TData>, ApiError, TVariables, unknown>, 'mutationFn'>\n) {\n  const queryClient = useQueryClient()\n\n  const mutationOptions = {\n    mutationFn,\n    ...options,\n    onError: (error: ApiError, variables: TVariables, context: unknown, _mutation: unknown) => {\n      console.error('[useApiMutation] Error:', error)\n      if (options?.onError) {\n        // @ts-expect-error - React Query v5 type mismatch workaround\n        options.onError(error, variables, context)\n      }\n    },\n    onSuccess: (data: ApiResponse<TData>, variables: TVariables, context: unknown, _mutation: unknown) => {\n      // Invalidate relevant queries on success\n      queryClient.invalidateQueries({ queryKey: [] })\n      if (options?.onSuccess) {\n        // @ts-expect-error - React Query v5 type mismatch workaround\n        options.onSuccess(data, variables, context)\n      }\n    }\n  }\n\n  return useMutation(mutationOptions as UseMutationOptions<ApiResponse<TData>, ApiError, TVariables, unknown>)\n}\n\n","/**\n * Centralized API client for all API requests\n * Handles CSRF tokens, error parsing, and standard response formatting\n */\n\nimport type { ApiResponse, ApiError } from '../types/api';\n\n/**\n * Get CSRF token from meta tag\n */\nfunction getCSRFToken(): string | null {\n  const meta = document.querySelector('meta[name=\"csrf-token\"]');\n  return meta?.getAttribute('content') || null;\n}\n\n/**\n * Parse error response from API\n */\nasync function parseError(response: Response): Promise<ApiError> {\n  let error: ApiError;\n\n  try {\n    const data = await response.json();\n    if (data.error) {\n      error = data as ApiError;\n    } else {\n      // Fallback for non-standard error responses\n      error = {\n        error: {\n          code: 'unknown_error',\n          message: data.message || `Server error: ${response.status}`,\n          details: data\n        }\n      };\n    }\n  } catch {\n    // Failed to parse JSON, return generic error\n    error = {\n      error: {\n        code: 'parse_error',\n        message: `Server error: ${response.status} ${response.statusText}`,\n        details: {}\n      }\n    };\n  }\n\n  return error;\n}\n\n/**\n * Request options for API calls\n */\nexport interface ApiRequestOptions extends RequestInit {\n  params?: Record<string, string | number | boolean | null | undefined>;\n  skipCSRF?: boolean;\n}\n\n/**\n * Make a request to the API\n * @param url - API endpoint URL\n * @param options - Fetch options and custom parameters\n * @returns Promise resolving to typed API response\n */\nexport async function apiRequest<T>(\n  url: string,\n  options: ApiRequestOptions = {}\n): Promise<ApiResponse<T>> {\n  const { params, skipCSRF = false, ...fetchOptions } = options;\n\n  // Build URL with query parameters\n  let finalUrl = url;\n  if (params) {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value != null && value !== '') {\n        searchParams.append(key, String(value));\n      }\n    });\n    const queryString = searchParams.toString();\n    if (queryString) {\n      finalUrl = `${url}${url.includes('?') ? '&' : '?'}${queryString}`;\n    }\n  }\n\n  // Get CSRF token if not skipped (for same-origin requests)\n  const csrfToken = skipCSRF ? null : getCSRFToken();\n\n  // Build headers\n  const headers = new Headers(fetchOptions.headers);\n\n  // Set Content-Type for JSON requests\n  if (!headers.has('Content-Type') && (fetchOptions.method === 'POST' || fetchOptions.method === 'PATCH' || fetchOptions.method === 'PUT')) {\n    headers.set('Content-Type', 'application/json');\n  }\n\n  // Set Accept header\n  if (!headers.has('Accept')) {\n    headers.set('Accept', 'application/json');\n  }\n\n  // Add CSRF token if available\n  if (csrfToken && (fetchOptions.method === 'POST' || fetchOptions.method === 'PATCH' || fetchOptions.method === 'PUT' || fetchOptions.method === 'DELETE')) {\n    headers.set('X-CSRF-Token', csrfToken);\n  }\n\n  // Build fetch options\n  const fetchConfig: RequestInit = {\n    ...fetchOptions,\n    headers,\n    credentials: 'same-origin' // Include session cookies\n  };\n\n  // Make request\n  const response = await fetch(finalUrl, fetchConfig);\n\n  // Handle non-2xx responses\n  if (!response.ok) {\n    const error = await parseError(response);\n    throw error;\n  }\n\n  // Parse successful response\n  const data = await response.json();\n\n  // Validate response structure\n  if (!data.data && !data.error) {\n    // Response doesn't match expected structure, wrap it\n    return {\n      data: data as T,\n      meta: {\n        timestamp: new Date().toISOString(),\n        version: 'v1'\n      }\n    };\n  }\n\n  return data as ApiResponse<T>;\n}\n\n/**\n * GET request helper\n */\nexport async function apiGet<T>(url: string, params?: ApiRequestOptions['params']): Promise<ApiResponse<T>> {\n  return apiRequest<T>(url, { method: 'GET', params });\n}\n\n/**\n * POST request helper\n */\nexport async function apiPost<T>(url: string, body?: unknown, params?: ApiRequestOptions['params']): Promise<ApiResponse<T>> {\n  return apiRequest<T>(url, {\n    method: 'POST',\n    body: body ? JSON.stringify(body) : undefined,\n    params\n  });\n}\n\n/**\n * PATCH request helper\n */\nexport async function apiPatch<T>(url: string, body?: unknown, params?: ApiRequestOptions['params']): Promise<ApiResponse<T>> {\n  return apiRequest<T>(url, {\n    method: 'PATCH',\n    body: body ? JSON.stringify(body) : undefined,\n    params\n  });\n}\n\n/**\n * PUT request helper\n */\nexport async function apiPut<T>(url: string, body?: unknown, params?: ApiRequestOptions['params']): Promise<ApiResponse<T>> {\n  return apiRequest<T>(url, {\n    method: 'PUT',\n    body: body ? JSON.stringify(body) : undefined,\n    params\n  });\n}\n\n/**\n * DELETE request helper\n */\nexport async function apiDelete<T>(url: string, params?: ApiRequestOptions['params']): Promise<ApiResponse<T>> {\n  return apiRequest<T>(url, { method: 'DELETE', params });\n}\n\n","/**\n * Typed endpoint URL constants for API v1\n * All endpoints are prefixed with /api/v1\n */\n\nexport const API_BASE = '/api/v1';\n\nexport const endpoints = {\n  // Transactions\n  transactions: {\n    index: () => `${API_BASE}/transactions`,\n    show: (id: number) => `${API_BASE}/transactions/${id}`,\n    create: () => `${API_BASE}/transactions`,\n    update: (id: number) => `${API_BASE}/transactions/${id}`,\n    destroy: (id: number) => `${API_BASE}/transactions/${id}`,\n    search: () => `${API_BASE}/transactions/search`,\n    month: (year: number, month: number) => `${API_BASE}/transactions/${year}/${month}`\n  },\n\n  // Recurring Transactions\n  recurringTransactions: {\n    index: () => `${API_BASE}/recurring_transactions`,\n    show: (id: number) => `${API_BASE}/recurring_transactions/${id}`,\n    create: () => `${API_BASE}/recurring_transactions`,\n    update: (id: number) => `${API_BASE}/recurring_transactions/${id}`,\n    destroy: (id: number) => `${API_BASE}/recurring_transactions/${id}`,\n    toggleActive: (id: number) => `${API_BASE}/recurring_transactions/${id}/toggle_active`\n  },\n\n  // Filters\n  filters: {\n    index: () => `${API_BASE}/filters`,\n    show: (id: number) => `${API_BASE}/filters/${id}`,\n    create: () => `${API_BASE}/filters`,\n    update: (id: number) => `${API_BASE}/filters/${id}`,\n    destroy: (id: number) => `${API_BASE}/filters/${id}`\n  },\n\n  // Dashboard\n  dashboard: {\n    stats: () => `${API_BASE}/dashboard/stats`\n  },\n\n  // Calendar\n  calendar: {\n    events: () => `${API_BASE}/calendar/events`\n  },\n\n  // Trends\n  trends: {\n    data: () => `${API_BASE}/trends/data`\n  },\n\n  // Analysis\n  analysis: {\n    data: () => `${API_BASE}/analysis/data`\n  }\n} as const;\n\n"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","jsxRuntimeModule","require$$0","Subscribable","listener","defaultTimeoutProvider","callback","delay","timeoutId","intervalId","TimeoutManager","_a","__privateAdd","_provider","_providerCalled","provider","__privateSet","__privateGet","timeoutManager","systemSetTimeoutZero","isServer","noop","functionalUpdate","updater","input","isValidTimeout","value","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","options","_","val","isPlainObject","result","a","b","hasOwn","replaceEqualDeep","array","isPlainArray","aSize","bItems","bSize","copy","equalItems","i","aItem","bItem","shallowEqualObjects","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","shouldThrowError","throwOnError","params","FocusManager","_focused","_cleanup","_setup","onFocus","setup","focused","isFocused","focusManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultScheduler","createNotifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","flush","originalQueue","args","fn","notifyManager","OnlineManager","_online","onOnline","onlineListener","offlineListener","online","onlineManager","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","createRetryer","isRetryCancelled","continueFn","isResolved","cancel","cancelOptions","error","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","retry","retryDelay","shouldRetry","Removable","_gcTimeout","newGcTime","Query","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","getDefaultState","defaultState","newData","__privateMethod","dispatch_fn","state","setStateOptions","promise","_b","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","queryFnContext2","context","context2","_c","_d","_f","_e","_h","_g","_j","_i","_l","_k","action","reducer","fetchState","newState","hasData","initialDataUpdatedAt","QueryObserver","client","_QueryObserver_instances","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","shouldFetchOnMount","executeFetch_fn","updateTimers_fn","shouldFetchOn","clearStaleTimeout_fn","clearRefetchInterval_fn","prevOptions","prevQuery","updateQuery_fn","mounted","shouldFetchOptionally","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","updateRefetchInterval_fn","shouldAssignObserverCurrentProperties","onPropTracked","target","defaultedOptions","prevResult","prevResultState","prevResultOptions","queryInitialState","isPlaceholderData","fetchOnMount","fetchOptionally","errorUpdatedAt","skipSelect","placeholderData","selectError","isFetching","isPending","isError","isLoading","nextResult","isStale","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","notify_fn","nextInterval","notifyOptions","shouldLoadOnMount","field","optimisticResult","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","Mutation","_Mutation_instances","_observers","_mutationCache","variables","onContinue","mutationFnContext","restored","isPaused","_n","_m","_p","_o","_r","_q","_t","_s","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","scope","scopeFor","scopedMutations","index","mutationsWithSameScope","firstPendingMutation","m","foundMutation","defaultedFilters","event","pausedMutations","MutationObserver","_MutationObserver_instances","_currentMutation","_mutateOptions","updateResult_fn","onMutateResult","QueryCache","_queries","queryHash","queryInMap","queries","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","cachedData","queryCache","defaultedCancelOptions","promises","defaults","queryDefault","QueryClientContext","React.createContext","useQueryClient","queryClient","React.useContext","QueryClientProvider","children","React.useEffect","jsx","IsRestoringContext","useIsRestoring","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","getHasError","suspense","ensureSuspenseTimers","clamp","originalStaleTime","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","isNewCacheEntry","React.useState","shouldSubscribe","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","useQuery","useMutation","mutate","mutateOptions","QueryProvider","ErrorBoundary","Component","props","errorInfo","jsxs","useApiQuery","useApiMutation","mutationFn","mutationOptions","_mutation","getCSRFToken","meta","parseError","response","apiRequest","url","skipCSRF","finalUrl","searchParams","queryString","csrfToken","headers","fetchConfig","apiGet","apiPost","body","apiPatch","apiDelete","API_BASE","endpoints","id","year","month"],"mappings":";;;;;;;;GAWA,IAAIA,GAAqB,OAAO,IAAI,4BAA4B,EAC9DC,GAAsB,OAAO,IAAI,gBAAgB,EACnD,SAASC,GAAQC,EAAMC,EAAQC,EAAU,CACvC,IAAIC,EAAM,KAGV,GAFWD,IAAX,SAAwBC,EAAM,GAAKD,GACxBD,EAAO,MAAlB,SAA0BE,EAAM,GAAKF,EAAO,KACxC,QAASA,EAAQ,CACnBC,EAAW,CAAA,EACX,QAASE,KAAYH,EACTG,IAAV,QAAuBF,EAASE,CAAQ,EAAIH,EAAOG,CAAQ,EACjE,MAASF,EAAWD,EAClB,OAAAA,EAASC,EAAS,IACX,CACL,SAAUL,GACV,KAAMG,EACN,IAAKG,EACL,IAAgBF,IAAX,OAAoBA,EAAS,KAClC,MAAOC,CACX,CACA,CACAG,GAAA,SAAmBP,GACnBO,GAAA,IAAcN,GACdM,GAAA,KAAeN,GC9BbO,GAAA,QAAiBC,oBCFfC,GAAe,KAAM,CACvB,aAAc,CACZ,KAAK,UAA4B,IAAI,IACrC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,CAC3C,CACA,UAAUC,EAAU,CAClB,YAAK,UAAU,IAAIA,CAAQ,EAC3B,KAAK,YAAW,EACT,IAAM,CACX,KAAK,UAAU,OAAOA,CAAQ,EAC9B,KAAK,cAAa,CACpB,CACF,CACA,cAAe,CACb,OAAO,KAAK,UAAU,KAAO,CAC/B,CACA,aAAc,CACd,CACA,eAAgB,CAChB,CACF,ECpBIC,GAAyB,CAW3B,WAAY,CAACC,EAAUC,IAAU,WAAWD,EAAUC,CAAK,EAC3D,aAAeC,GAAc,aAAaA,CAAS,EACnD,YAAa,CAACF,EAAUC,IAAU,YAAYD,EAAUC,CAAK,EAC7D,cAAgBE,GAAe,cAAcA,CAAU,CACzD,WACIC,IAAiBC,GAAA,KAAM,CAAN,cAOnBC,EAAA,KAAAC,GAAYR,IACZO,EAAA,KAAAE,GAAkB,IAClB,mBAAmBC,EAAU,CAS3BC,EAAA,KAAKH,GAAYE,EAInB,CACA,WAAWT,EAAUC,EAAO,CAI1B,OAAOU,EAAA,KAAKJ,IAAU,WAAWP,EAAUC,CAAK,CAClD,CACA,aAAaC,EAAW,CACtBS,EAAA,KAAKJ,IAAU,aAAaL,CAAS,CACvC,CACA,YAAYF,EAAUC,EAAO,CAI3B,OAAOU,EAAA,KAAKJ,IAAU,YAAYP,EAAUC,CAAK,CACnD,CACA,cAAcE,EAAY,CACxBQ,EAAA,KAAKJ,IAAU,cAAcJ,CAAU,CACzC,CACF,EAlCEI,GAAA,YACAC,GAAA,YARmBH,IA0CjBO,GAAiB,IAAIR,GACzB,SAASS,GAAqBb,EAAU,CACtC,WAAWA,EAAU,CAAC,CACxB,CC5DA,IAAIc,GAAW,OAAO,OAAW,KAAe,SAAU,WAC1D,SAASC,GAAO,CAChB,CACA,SAASC,GAAiBC,EAASC,EAAO,CACxC,OAAO,OAAOD,GAAY,WAAaA,EAAQC,CAAK,EAAID,CAC1D,CACA,SAASE,GAAeC,EAAO,CAC7B,OAAO,OAAOA,GAAU,UAAYA,GAAS,GAAKA,IAAU,GAC9D,CACA,SAASC,GAAeC,EAAWC,EAAW,CAC5C,OAAO,KAAK,IAAID,GAAaC,GAAa,GAAK,KAAK,IAAA,EAAO,CAAC,CAC9D,CACA,SAASC,GAAiBD,EAAWE,EAAO,CAC1C,OAAO,OAAOF,GAAc,WAAaA,EAAUE,CAAK,EAAIF,CAC9D,CACA,SAASG,EAAeC,EAASF,EAAO,CACtC,OAAO,OAAOE,GAAY,WAAaA,EAAQF,CAAK,EAAIE,CAC1D,CACA,SAASC,GAAWC,EAASJ,EAAO,CAClC,KAAM,CACJ,KAAApC,EAAO,MACP,MAAAyC,EACA,YAAAC,EACA,UAAAC,EACA,SAAAC,EACA,MAAAC,CAAA,EACEL,EACJ,GAAII,GACF,GAAIH,GACF,GAAIL,EAAM,YAAcU,GAAsBF,EAAUR,EAAM,OAAO,EACnE,MAAO,WAEA,CAACW,GAAgBX,EAAM,SAAUQ,CAAQ,EAClD,MAAO,GAGX,GAAI5C,IAAS,MAAO,CAClB,MAAMgD,EAAWZ,EAAM,SAAA,EAIvB,GAHIpC,IAAS,UAAY,CAACgD,GAGtBhD,IAAS,YAAcgD,EACzB,MAAO,EAEX,CAOA,MANI,SAAOH,GAAU,WAAaT,EAAM,QAAA,IAAcS,GAGlDH,GAAeA,IAAgBN,EAAM,MAAM,aAG3CO,GAAa,CAACA,EAAUP,CAAK,EAInC,CACA,SAASa,GAAcT,EAASU,EAAU,CACxC,KAAM,CAAE,MAAAT,EAAO,OAAAU,EAAQ,UAAAR,EAAW,YAAAS,GAAgBZ,EAClD,GAAIY,EAAa,CACf,GAAI,CAACF,EAAS,QAAQ,YACpB,MAAO,GAET,GAAIT,GACF,GAAIY,GAAQH,EAAS,QAAQ,WAAW,IAAMG,GAAQD,CAAW,EAC/D,MAAO,WAEA,CAACL,GAAgBG,EAAS,QAAQ,YAAaE,CAAW,EACnE,MAAO,EAEX,CAIA,MAHI,EAAAD,GAAUD,EAAS,MAAM,SAAWC,GAGpCR,GAAa,CAACA,EAAUO,CAAQ,EAItC,CACA,SAASJ,GAAsBF,EAAUU,EAAS,CAEhD,QADeA,GAAA,YAAAA,EAAS,iBAAkBD,IAC5BT,CAAQ,CACxB,CACA,SAASS,GAAQT,EAAU,CACzB,OAAO,KAAK,UACVA,EACA,CAACW,EAAGC,IAAQC,GAAcD,CAAG,EAAI,OAAO,KAAKA,CAAG,EAAE,KAAA,EAAO,OAAO,CAACE,EAAQvD,KACvEuD,EAAOvD,CAAG,EAAIqD,EAAIrD,CAAG,EACduD,GACN,CAAA,CAAE,EAAIF,CAAA,CAEb,CACA,SAAST,GAAgBY,EAAGC,EAAG,CAC7B,OAAID,IAAMC,EACD,GAEL,OAAOD,GAAM,OAAOC,EACf,GAELD,GAAKC,GAAK,OAAOD,GAAM,UAAY,OAAOC,GAAM,SAC3C,OAAO,KAAKA,CAAC,EAAE,MAAOzD,GAAQ4C,GAAgBY,EAAExD,CAAG,EAAGyD,EAAEzD,CAAG,CAAC,CAAC,EAE/D,EACT,CACA,IAAI0D,GAAS,OAAO,UAAU,eAC9B,SAASC,GAAiBH,EAAGC,EAAG,CAC9B,GAAID,IAAMC,EACR,OAAOD,EAET,MAAMI,EAAQC,GAAaL,CAAC,GAAKK,GAAaJ,CAAC,EAC/C,GAAI,CAACG,GAAS,EAAEN,GAAcE,CAAC,GAAKF,GAAcG,CAAC,GAAI,OAAOA,EAE9D,MAAMK,GADSF,EAAQJ,EAAI,OAAO,KAAKA,CAAC,GACnB,OACfO,EAASH,EAAQH,EAAI,OAAO,KAAKA,CAAC,EAClCO,EAAQD,EAAO,OACfE,EAAOL,EAAQ,IAAI,MAAMI,CAAK,EAAI,CAAA,EACxC,IAAIE,EAAa,EACjB,QAASC,EAAI,EAAGA,EAAIH,EAAOG,IAAK,CAC9B,MAAMnE,EAAM4D,EAAQO,EAAIJ,EAAOI,CAAC,EAC1BC,EAAQZ,EAAExD,CAAG,EACbqE,EAAQZ,EAAEzD,CAAG,EACnB,GAAIoE,IAAUC,EAAO,CACnBJ,EAAKjE,CAAG,EAAIoE,GACRR,EAAQO,EAAIL,EAAQJ,GAAO,KAAKF,EAAGxD,CAAG,IAAGkE,IAC7C,QACF,CACA,GAAIE,IAAU,MAAQC,IAAU,MAAQ,OAAOD,GAAU,UAAY,OAAOC,GAAU,SAAU,CAC9FJ,EAAKjE,CAAG,EAAIqE,EACZ,QACF,CACA,MAAM,EAAIV,GAAiBS,EAAOC,CAAK,EACvCJ,EAAKjE,CAAG,EAAI,EACR,IAAMoE,GAAOF,GACnB,CACA,OAAOJ,IAAUE,GAASE,IAAeJ,EAAQN,EAAIS,CACvD,CACA,SAASK,GAAoBd,EAAGC,EAAG,CACjC,GAAI,CAACA,GAAK,OAAO,KAAKD,CAAC,EAAE,SAAW,OAAO,KAAKC,CAAC,EAAE,OACjD,MAAO,GAET,UAAWzD,KAAOwD,EAChB,GAAIA,EAAExD,CAAG,IAAMyD,EAAEzD,CAAG,EAClB,MAAO,GAGX,MAAO,EACT,CACA,SAAS6D,GAAajC,EAAO,CAC3B,OAAO,MAAM,QAAQA,CAAK,GAAKA,EAAM,SAAW,OAAO,KAAKA,CAAK,EAAE,MACrE,CACA,SAAS0B,GAAciB,EAAG,CACxB,GAAI,CAACC,GAAmBD,CAAC,EACvB,MAAO,GAET,MAAME,EAAOF,EAAE,YACf,GAAIE,IAAS,OACX,MAAO,GAET,MAAMC,EAAOD,EAAK,UAOlB,MANI,GAACD,GAAmBE,CAAI,GAGxB,CAACA,EAAK,eAAe,eAAe,GAGpC,OAAO,eAAeH,CAAC,IAAM,OAAO,UAI1C,CACA,SAASC,GAAmBD,EAAG,CAC7B,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAC,IAAM,iBAC/C,CACA,SAASI,GAAMC,EAAS,CACtB,OAAO,IAAI,QAASC,GAAY,CAC9BzD,GAAe,WAAWyD,EAASD,CAAO,CAC5C,CAAC,CACH,CACA,SAASE,GAAYC,EAAUC,EAAM7B,EAAS,CAC5C,OAAI,OAAOA,EAAQ,mBAAsB,WAChCA,EAAQ,kBAAkB4B,EAAUC,CAAI,EACtC7B,EAAQ,oBAAsB,GAWhCQ,GAAiBoB,EAAUC,CAAI,EAEjCA,CACT,CAIA,SAASC,GAASC,EAAOC,EAAMC,EAAM,EAAG,CACtC,MAAMC,EAAW,CAAC,GAAGH,EAAOC,CAAI,EAChC,OAAOC,GAAOC,EAAS,OAASD,EAAMC,EAAS,MAAM,CAAC,EAAIA,CAC5D,CACA,SAASC,GAAWJ,EAAOC,EAAMC,EAAM,EAAG,CACxC,MAAMC,EAAW,CAACF,EAAM,GAAGD,CAAK,EAChC,OAAOE,GAAOC,EAAS,OAASD,EAAMC,EAAS,MAAM,EAAG,EAAE,EAAIA,CAChE,CACA,IAAIE,GAAY,OAAA,EAChB,SAASC,GAAcrC,EAASsC,EAAc,CAQ5C,MAAI,CAACtC,EAAQ,UAAWsC,GAAA,MAAAA,EAAc,gBAC7B,IAAMA,EAAa,eAExB,CAACtC,EAAQ,SAAWA,EAAQ,UAAYoC,GACnC,IAAM,QAAQ,OAAO,IAAI,MAAM,qBAAqBpC,EAAQ,SAAS,GAAG,CAAC,EAE3EA,EAAQ,OACjB,CACA,SAASuC,GAAiBC,EAAcC,EAAQ,CAC9C,OAAI,OAAOD,GAAiB,WACnBA,EAAa,GAAGC,CAAM,EAExB,CAAC,CAACD,CACX,iBCnOIE,IAAehF,GAAA,cAAcR,EAAa,CAI5C,aAAc,CACZ,MAAK,EAJPS,EAAA,KAAAgF,IACAhF,EAAA,KAAAiF,IACAjF,EAAA,KAAAkF,IAGE9E,EAAA,KAAK8E,GAAUC,GAAY,CACzB,GAAI,CAAC3E,IAAY,OAAO,iBAAkB,CACxC,MAAMhB,EAAW,IAAM2F,EAAO,EAC9B,cAAO,iBAAiB,mBAAoB3F,EAAU,EAAK,EACpD,IAAM,CACX,OAAO,oBAAoB,mBAAoBA,CAAQ,CACzD,CACF,CAEF,EACF,CACA,aAAc,CACPa,EAAA,KAAK4E,KACR,KAAK,iBAAiB5E,EAAA,KAAK6E,GAAM,CAErC,CACA,eAAgB,OACT,KAAK,kBACRnF,EAAAM,EAAA,KAAK4E,MAAL,MAAAlF,EAAA,WACAK,EAAA,KAAK6E,GAAW,QAEpB,CACA,iBAAiBG,EAAO,OACtBhF,EAAA,KAAK8E,GAASE,IACdrF,EAAAM,EAAA,KAAK4E,MAAL,MAAAlF,EAAA,WACAK,EAAA,KAAK6E,GAAWG,EAAOC,GAAY,CAC7B,OAAOA,GAAY,UACrB,KAAK,WAAWA,CAAO,EAEvB,KAAK,QAAO,CAEhB,CAAC,EACH,CACA,WAAWA,EAAS,CACFhF,EAAA,KAAK2E,MAAaK,IAEhCjF,EAAA,KAAK4E,GAAWK,GAChB,KAAK,QAAO,EAEhB,CACA,SAAU,CACR,MAAMC,EAAY,KAAK,UAAS,EAChC,KAAK,UAAU,QAAS9F,GAAa,CACnCA,EAAS8F,CAAS,CACpB,CAAC,CACH,CACA,WAAY,OACV,OAAI,OAAOjF,EAAA,KAAK2E,KAAa,UACpB3E,EAAA,KAAK2E,MAEPjF,EAAA,WAAW,WAAX,YAAAA,EAAqB,mBAAoB,QAClD,CACF,EAzDEiF,GAAA,YACAC,GAAA,YACAC,GAAA,YAHiBnF,IA2DfwF,GAAe,IAAIR,GC5DvB,SAASS,IAAkB,CACzB,IAAIzB,EACA0B,EACJ,MAAMC,EAAW,IAAI,QAAQ,CAACC,EAAUC,IAAY,CAClD7B,EAAU4B,EACVF,EAASG,CACX,CAAC,EACDF,EAAS,OAAS,UAClBA,EAAS,MAAM,IAAM,CACrB,CAAC,EACD,SAASG,EAAS3B,EAAM,CACtB,OAAO,OAAOwB,EAAUxB,CAAI,EAC5B,OAAOwB,EAAS,QAChB,OAAOA,EAAS,MAClB,CACA,OAAAA,EAAS,QAAW5E,GAAU,CAC5B+E,EAAS,CACP,OAAQ,YACR,MAAA/E,CACN,CAAK,EACDiD,EAAQjD,CAAK,CACf,EACA4E,EAAS,OAAUI,GAAW,CAC5BD,EAAS,CACP,OAAQ,WACR,OAAAC,CACN,CAAK,EACDL,EAAOK,CAAM,CACf,EACOJ,CACT,CC9BA,IAAIK,GAAmBxF,GACvB,SAASyF,IAAsB,CAC7B,IAAIC,EAAQ,CAAA,EACRC,EAAe,EACfC,EAAYzG,GAAa,CAC3BA,EAAQ,CACV,EACI0G,EAAiB1G,GAAa,CAChCA,EAAQ,CACV,EACI2G,EAAaN,GACjB,MAAMO,EAAY5G,GAAa,CACzBwG,EACFD,EAAM,KAAKvG,CAAQ,EAEnB2G,EAAW,IAAM,CACfF,EAASzG,CAAQ,CACnB,CAAC,CAEL,EACM6G,EAAQ,IAAM,CAClB,MAAMC,EAAgBP,EACtBA,EAAQ,CAAA,EACJO,EAAc,QAChBH,EAAW,IAAM,CACfD,EAAc,IAAM,CAClBI,EAAc,QAAS9G,GAAa,CAClCyG,EAASzG,CAAQ,CACnB,CAAC,CACH,CAAC,CACH,CAAC,CAEL,EACA,MAAO,CACL,MAAQA,GAAa,CACnB,IAAI+C,EACJyD,IACA,GAAI,CACFzD,EAAS/C,EAAQ,CACnB,QAAC,CACCwG,IACKA,GACHK,EAAK,CAET,CACA,OAAO9D,CACT,EAIA,WAAa/C,GACJ,IAAI+G,IAAS,CAClBH,EAAS,IAAM,CACb5G,EAAS,GAAG+G,CAAI,CAClB,CAAC,CACH,EAEF,SAAAH,EAKA,kBAAoBI,GAAO,CACzBP,EAAWO,CACb,EAKA,uBAAyBA,GAAO,CAC9BN,EAAgBM,CAClB,EACA,aAAeA,GAAO,CACpBL,EAAaK,CACf,CACJ,CACA,CACA,IAAIC,EAAgBX,GAAmB,cC5EnCY,IAAgB7G,GAAA,cAAcR,EAAa,CAI7C,aAAc,CACZ,MAAK,EAJPS,EAAA,KAAA6G,GAAU,IACV7G,EAAA,KAAAiF,IACAjF,EAAA,KAAAkF,IAGE9E,EAAA,KAAK8E,GAAU4B,GAAa,CAC1B,GAAI,CAACtG,IAAY,OAAO,iBAAkB,CACxC,MAAMuG,EAAiB,IAAMD,EAAS,EAAI,EACpCE,EAAkB,IAAMF,EAAS,EAAK,EAC5C,cAAO,iBAAiB,SAAUC,EAAgB,EAAK,EACvD,OAAO,iBAAiB,UAAWC,EAAiB,EAAK,EAClD,IAAM,CACX,OAAO,oBAAoB,SAAUD,CAAc,EACnD,OAAO,oBAAoB,UAAWC,CAAe,CACvD,CACF,CAEF,EACF,CACA,aAAc,CACP3G,EAAA,KAAK4E,KACR,KAAK,iBAAiB5E,EAAA,KAAK6E,GAAM,CAErC,CACA,eAAgB,OACT,KAAK,kBACRnF,EAAAM,EAAA,KAAK4E,MAAL,MAAAlF,EAAA,WACAK,EAAA,KAAK6E,GAAW,QAEpB,CACA,iBAAiBG,EAAO,OACtBhF,EAAA,KAAK8E,GAASE,IACdrF,EAAAM,EAAA,KAAK4E,MAAL,MAAAlF,EAAA,WACAK,EAAA,KAAK6E,GAAWG,EAAM,KAAK,UAAU,KAAK,IAAI,CAAC,EACjD,CACA,UAAU6B,EAAQ,CACA5G,EAAA,KAAKwG,MAAYI,IAE/B7G,EAAA,KAAKyG,GAAUI,GACf,KAAK,UAAU,QAASzH,GAAa,CACnCA,EAASyH,CAAM,CACjB,CAAC,EAEL,CACA,UAAW,CACT,OAAO5G,EAAA,KAAKwG,GACd,CACF,EA/CEA,GAAA,YACA5B,GAAA,YACAC,GAAA,YAHkBnF,IAiDhBmH,GAAgB,IAAIN,GC/CxB,SAASO,GAAkBC,EAAc,CACvC,OAAO,KAAK,IAAI,IAAM,GAAKA,EAAc,GAAG,CAC9C,CACA,SAASC,GAASC,EAAa,CAC7B,OAAQA,GAAe,YAAc,SAAWJ,GAAc,SAAQ,EAAK,EAC7E,CACA,IAAIK,GAAiB,cAAc,KAAM,CACvC,YAAYlF,EAAS,CACnB,MAAM,gBAAgB,EACtB,KAAK,OAASA,GAAA,YAAAA,EAAS,OACvB,KAAK,OAASA,GAAA,YAAAA,EAAS,MACzB,CACF,EAIA,SAASmF,GAAcxI,EAAQ,CAC7B,IAAIyI,EAAmB,GACnBL,EAAe,EACfM,EACJ,MAAMhC,EAAWF,GAAe,EAC1BmC,EAAa,IAAMjC,EAAS,SAAW,UACvCkC,EAAUC,GAAkB,OAChC,GAAI,CAACF,EAAU,EAAI,CACjB,MAAMG,EAAQ,IAAIP,GAAeM,CAAa,EAC9CpC,EAAOqC,CAAK,GACZ/H,EAAAf,EAAO,WAAP,MAAAe,EAAA,KAAAf,EAAkB8I,EACpB,CACF,EACMC,EAAc,IAAM,CACxBN,EAAmB,EACrB,EACMO,EAAgB,IAAM,CAC1BP,EAAmB,EACrB,EACMQ,EAAc,IAAM1C,GAAa,UAAS,IAAOvG,EAAO,cAAgB,UAAYkI,GAAc,SAAQ,IAAOlI,EAAO,OAAM,EAC9HkJ,EAAW,IAAMb,GAASrI,EAAO,WAAW,GAAKA,EAAO,OAAM,EAC9D+E,EAAWjD,GAAU,CACpB6G,EAAU,IACbD,GAAA,MAAAA,IACAhC,EAAS,QAAQ5E,CAAK,EAE1B,EACM2E,EAAU3E,GAAU,CACnB6G,EAAU,IACbD,GAAA,MAAAA,IACAhC,EAAS,OAAO5E,CAAK,EAEzB,EACMqH,EAAQ,IACL,IAAI,QAASC,GAAoB,OACtCV,EAAc5G,GAAU,EAClB6G,EAAU,GAAMM,MAClBG,EAAgBtH,CAAK,CAEzB,GACAf,EAAAf,EAAO,UAAP,MAAAe,EAAA,KAAAf,EACF,CAAC,EAAE,KAAK,IAAM,OACZ0I,EAAa,OACRC,EAAU,IACb5H,EAAAf,EAAO,aAAP,MAAAe,EAAA,KAAAf,EAEJ,CAAC,EAEGqJ,EAAM,IAAM,CAChB,GAAIV,EAAU,EACZ,OAEF,IAAIW,EACJ,MAAMC,EAAiBnB,IAAiB,EAAIpI,EAAO,eAAiB,OACpE,GAAI,CACFsJ,EAAiBC,GAAkBvJ,EAAO,GAAE,CAC9C,OAAS8I,EAAO,CACdQ,EAAiB,QAAQ,OAAOR,CAAK,CACvC,CACA,QAAQ,QAAQQ,CAAc,EAAE,KAAKvE,CAAO,EAAE,MAAO+D,GAAU,OAC7D,GAAIH,EAAU,EACZ,OAEF,MAAMa,EAAQxJ,EAAO,QAAUwB,GAAW,EAAI,GACxCiI,EAAazJ,EAAO,YAAcmI,GAClCxH,EAAQ,OAAO8I,GAAe,WAAaA,EAAWrB,EAAcU,CAAK,EAAIW,EAC7EC,EAAcF,IAAU,IAAQ,OAAOA,GAAU,UAAYpB,EAAeoB,GAAS,OAAOA,GAAU,YAAcA,EAAMpB,EAAcU,CAAK,EACnJ,GAAIL,GAAoB,CAACiB,EAAa,CACpCjD,EAAOqC,CAAK,EACZ,MACF,CACAV,KACArH,EAAAf,EAAO,SAAP,MAAAe,EAAA,KAAAf,EAAgBoI,EAAcU,GAC9BjE,GAAMlE,CAAK,EAAE,KAAK,IACTsI,EAAW,EAAK,OAASE,EAAK,CACtC,EAAE,KAAK,IAAM,CACRV,EACFhC,EAAOqC,CAAK,EAEZO,EAAG,CAEP,CAAC,CACH,CAAC,CACH,EACA,MAAO,CACL,QAAS3C,EACT,OAAQ,IAAMA,EAAS,OACvB,OAAAkC,EACA,SAAU,KACRF,GAAA,MAAAA,IACOhC,GAET,YAAAqC,EACA,cAAAC,EACA,SAAAE,EACA,MAAO,KACDA,EAAQ,EACVG,EAAG,EAEHF,EAAK,EAAG,KAAKE,CAAG,EAEX3C,EAEb,CACA,WC1HIiD,IAAY5I,GAAA,KAAM,CAAN,cACdC,EAAA,KAAA4I,IACA,SAAU,CACR,KAAK,eAAc,CACrB,CACA,YAAa,CACX,KAAK,eAAc,EACf/H,GAAe,KAAK,MAAM,GAC5BT,EAAA,KAAKwI,GAAatI,GAAe,WAAW,IAAM,CAChD,KAAK,eAAc,CACrB,EAAG,KAAK,MAAM,EAElB,CACA,aAAauI,EAAW,CACtB,KAAK,OAAS,KAAK,IACjB,KAAK,QAAU,EACfA,IAAcrI,GAAW,IAAW,EAAI,GAAK,IACnD,CACE,CACA,gBAAiB,CACXH,EAAA,KAAKuI,MACPtI,GAAe,aAAaD,EAAA,KAAKuI,GAAU,EAC3CxI,EAAA,KAAKwI,GAAa,QAEtB,CACF,EAxBEA,GAAA,YADc7I,8BCUZ+I,IAAQ/I,GAAA,cAAc4I,EAAU,CAQlC,YAAY3J,EAAQ,CAClB,MAAA,EATQgB,EAAA,KAAA+I,GACV/I,EAAA,KAAAgJ,IACAhJ,EAAA,KAAAiJ,IACAjJ,EAAA,KAAAkJ,GACAlJ,EAAA,KAAAmJ,IACAnJ,EAAA,KAAAoJ,GACApJ,EAAA,KAAAqJ,IACArJ,EAAA,KAAAsJ,IAGElJ,EAAA,KAAKkJ,GAAuB,IAC5BlJ,EAAA,KAAKiJ,GAAkBrK,EAAO,gBAC9B,KAAK,WAAWA,EAAO,OAAO,EAC9B,KAAK,UAAY,CAAA,EACjBoB,EAAA,KAAK+I,GAAUnK,EAAO,QACtBoB,EAAA,KAAK8I,EAAS7I,EAAA,KAAK8I,IAAQ,cAAA,GAC3B,KAAK,SAAWnK,EAAO,SACvB,KAAK,UAAYA,EAAO,UACxBoB,EAAA,KAAK4I,GAAgBO,GAAgB,KAAK,OAAO,GACjD,KAAK,MAAQvK,EAAO,OAASqB,EAAA,KAAK2I,IAClC,KAAK,WAAA,CACP,CACA,IAAI,MAAO,CACT,OAAO,KAAK,QAAQ,IACtB,CACA,IAAI,SAAU,OACZ,OAAOjJ,EAAAM,EAAA,KAAK+I,KAAL,YAAArJ,EAAe,OACxB,CACA,WAAWsC,EAAS,CAGlB,GAFA,KAAK,QAAU,CAAE,GAAGhC,EAAA,KAAKgJ,IAAiB,GAAGhH,CAAA,EAC7C,KAAK,aAAa,KAAK,QAAQ,MAAM,EACjC,KAAK,OAAS,KAAK,MAAM,OAAS,OAAQ,CAC5C,MAAMmH,EAAeD,GAAgB,KAAK,OAAO,EAC7CC,EAAa,OAAS,SACxB,KAAK,QAAQA,EAAa,KAAM,CAC9B,UAAWA,EAAa,cACxB,OAAQ,EAAA,CACT,EACDpJ,EAAA,KAAK4I,GAAgBQ,GAEzB,CACF,CACA,gBAAiB,CACX,CAAC,KAAK,UAAU,QAAU,KAAK,MAAM,cAAgB,QACvDnJ,EAAA,KAAK6I,GAAO,OAAO,IAAI,CAE3B,CACA,QAAQO,EAASpH,EAAS,CACxB,MAAM6B,EAAOF,GAAY,KAAK,MAAM,KAAMyF,EAAS,KAAK,OAAO,EAC/D,OAAAC,EAAA,KAAKX,EAAAY,GAAL,UAAe,CACb,KAAAzF,EACA,KAAM,UACN,cAAe7B,GAAA,YAAAA,EAAS,UACxB,OAAQA,GAAA,YAAAA,EAAS,MAAA,GAEZ6B,CACT,CACA,SAAS0F,EAAOC,EAAiB,CAC/BH,EAAA,KAAKX,EAAAY,GAAL,UAAe,CAAE,KAAM,WAAY,MAAAC,EAAO,gBAAAC,GAC5C,CACA,OAAOxH,EAAS,SACd,MAAMyH,GAAU/J,EAAAM,EAAA,KAAK+I,KAAL,YAAArJ,EAAe,QAC/B,OAAAgK,EAAA1J,EAAA,KAAK+I,KAAL,MAAAW,EAAe,OAAO1H,GACfyH,EAAUA,EAAQ,KAAKrJ,CAAI,EAAE,MAAMA,CAAI,EAAI,QAAQ,QAAA,CAC5D,CACA,SAAU,CACR,MAAM,QAAA,EACN,KAAK,OAAO,CAAE,OAAQ,EAAA,CAAM,CAC9B,CACA,OAAQ,CACN,KAAK,QAAA,EACL,KAAK,SAASJ,EAAA,KAAK2I,GAAa,CAClC,CACA,UAAW,CACT,OAAO,KAAK,UAAU,KACnBgB,GAAa5I,EAAe4I,EAAS,QAAQ,QAAS,IAAI,IAAM,EAAA,CAErE,CACA,YAAa,CACX,OAAI,KAAK,kBAAA,EAAsB,EACtB,CAAC,KAAK,SAAA,EAER,KAAK,QAAQ,UAAYvF,IAAa,KAAK,MAAM,gBAAkB,KAAK,MAAM,mBAAqB,CAC5G,CACA,UAAW,CACT,OAAI,KAAK,kBAAA,EAAsB,EACtB,KAAK,UAAU,KACnBuF,GAAa9I,GAAiB8I,EAAS,QAAQ,UAAW,IAAI,IAAM,QAAA,EAGlE,EACT,CACA,SAAU,CACR,OAAI,KAAK,kBAAA,EAAsB,EACtB,KAAK,UAAU,KACnBA,GAAaA,EAAS,mBAAmB,OAAA,EAGvC,KAAK,MAAM,OAAS,QAAU,KAAK,MAAM,aAClD,CACA,cAAc/I,EAAY,EAAG,CAC3B,OAAI,KAAK,MAAM,OAAS,OACf,GAELA,IAAc,SACT,GAEL,KAAK,MAAM,cACN,GAEF,CAACF,GAAe,KAAK,MAAM,cAAeE,CAAS,CAC5D,CACA,SAAU,OACR,MAAM+I,EAAW,KAAK,UAAU,KAAMC,GAAMA,EAAE,0BAA0B,EACxED,GAAA,MAAAA,EAAU,QAAQ,CAAE,cAAe,EAAA,IACnCjK,EAAAM,EAAA,KAAK+I,KAAL,MAAArJ,EAAe,UACjB,CACA,UAAW,OACT,MAAMiK,EAAW,KAAK,UAAU,KAAMC,GAAMA,EAAE,wBAAwB,EACtED,GAAA,MAAAA,EAAU,QAAQ,CAAE,cAAe,EAAA,IACnCjK,EAAAM,EAAA,KAAK+I,KAAL,MAAArJ,EAAe,UACjB,CACA,YAAYiK,EAAU,CACf,KAAK,UAAU,SAASA,CAAQ,IACnC,KAAK,UAAU,KAAKA,CAAQ,EAC5B,KAAK,eAAA,EACL3J,EAAA,KAAK6I,GAAO,OAAO,CAAE,KAAM,gBAAiB,MAAO,KAAM,SAAAc,EAAU,EAEvE,CACA,eAAeA,EAAU,CACnB,KAAK,UAAU,SAASA,CAAQ,IAClC,KAAK,UAAY,KAAK,UAAU,OAAQC,GAAMA,IAAMD,CAAQ,EACvD,KAAK,UAAU,SACd3J,EAAA,KAAK+I,KACH/I,EAAA,KAAKiJ,IACPjJ,EAAA,KAAK+I,GAAS,OAAO,CAAE,OAAQ,GAAM,EAErC/I,EAAA,KAAK+I,GAAS,YAAA,GAGlB,KAAK,WAAA,GAEP/I,EAAA,KAAK6I,GAAO,OAAO,CAAE,KAAM,kBAAmB,MAAO,KAAM,SAAAc,EAAU,EAEzE,CACA,mBAAoB,CAClB,OAAO,KAAK,UAAU,MACxB,CACA,YAAa,CACN,KAAK,MAAM,eACdN,EAAA,KAAKX,EAAAY,GAAL,UAAe,CAAE,KAAM,YAAA,EAE3B,CACA,MAAM,MAAMtH,EAASsC,EAAc,6BACjC,GAAI,KAAK,MAAM,cAAgB,UAG/B5E,EAAAM,EAAA,KAAK+I,KAAL,YAAArJ,EAAe,YAAa,YAC1B,GAAI,KAAK,MAAM,OAAS,SAAU4E,GAAA,MAAAA,EAAc,eAC9C,KAAK,OAAO,CAAE,OAAQ,EAAA,CAAM,UACnBtE,EAAA,KAAK+I,GACd,OAAA/I,EAAA,KAAK+I,GAAS,cAAA,EACP/I,EAAA,KAAK+I,GAAS,QAMzB,GAHI/G,GACF,KAAK,WAAWA,CAAO,EAErB,CAAC,KAAK,QAAQ,QAAS,CACzB,MAAM2H,EAAW,KAAK,UAAU,KAAMC,GAAMA,EAAE,QAAQ,OAAO,EACzDD,GACF,KAAK,WAAWA,EAAS,OAAO,CAEpC,CAQA,MAAME,EAAkB,IAAI,gBACtBC,EAAqBC,GAAW,CACpC,OAAO,eAAeA,EAAQ,SAAU,CACtC,WAAY,GACZ,IAAK,KACHhK,EAAA,KAAKkJ,GAAuB,IACrBY,EAAgB,OACzB,CACD,CACH,EACMG,EAAU,IAAM,CACpB,MAAMC,EAAU5F,GAAc,KAAK,QAASC,CAAY,EAUlD4F,GATuB,IAAM,CACjC,MAAMC,GAAkB,CACtB,OAAQnK,EAAA,KAAK8I,IACb,SAAU,KAAK,SACf,KAAM,KAAK,IAAA,EAEb,OAAAgB,EAAkBK,EAAe,EAC1BA,EACT,GACuB,EAEvB,OADApK,EAAA,KAAKkJ,GAAuB,IACxB,KAAK,QAAQ,UACR,KAAK,QAAQ,UAClBgB,EACAC,EACA,IAAA,EAGGD,EAAQC,CAAc,CAC/B,EAaME,GAZqB,IAAM,CAC/B,MAAMC,EAAW,CACf,aAAA/F,EACA,QAAS,KAAK,QACd,SAAU,KAAK,SACf,OAAQtE,EAAA,KAAK8I,IACb,MAAO,KAAK,MACZ,QAAAkB,CAAA,EAEF,OAAAF,EAAkBO,CAAQ,EACnBA,CACT,GACgB,GAChBX,EAAA,KAAK,QAAQ,WAAb,MAAAA,EAAuB,QAAQU,EAAS,MACxCrK,EAAA,KAAK6I,GAAe,KAAK,QACrB,KAAK,MAAM,cAAgB,QAAU,KAAK,MAAM,cAAc0B,EAAAF,EAAQ,eAAR,YAAAE,EAAsB,QACtFjB,EAAA,KAAKX,EAAAY,GAAL,UAAe,CAAE,KAAM,QAAS,MAAMiB,EAAAH,EAAQ,eAAR,YAAAG,EAAsB,OAE9DxK,EAAA,KAAKgJ,EAAW5B,GAAc,CAC5B,eAAgB7C,GAAA,YAAAA,EAAc,eAC9B,GAAI8F,EAAQ,QACZ,SAAW3C,GAAU,CACfA,aAAiBP,IAAkBO,EAAM,QAC3C,KAAK,SAAS,CACZ,GAAGzH,EAAA,KAAK4I,IACR,YAAa,MAAA,CACd,EAEHiB,EAAgB,MAAA,CAClB,EACA,OAAQ,CAAC9C,EAAcU,IAAU,CAC/B4B,EAAA,KAAKX,EAAAY,GAAL,UAAe,CAAE,KAAM,SAAU,aAAAvC,EAAc,MAAAU,GACjD,EACA,QAAS,IAAM,CACb4B,EAAA,KAAKX,EAAAY,GAAL,UAAe,CAAE,KAAM,OAAA,EACzB,EACA,WAAY,IAAM,CAChBD,EAAA,KAAKX,EAAAY,GAAL,UAAe,CAAE,KAAM,UAAA,EACzB,EACA,MAAOc,EAAQ,QAAQ,MACvB,WAAYA,EAAQ,QAAQ,WAC5B,YAAaA,EAAQ,QAAQ,YAC7B,OAAQ,IAAM,EAAA,CACf,GACD,GAAI,CACF,MAAMvG,EAAO,MAAM7D,EAAA,KAAK+I,GAAS,MAAA,EACjC,GAAIlF,IAAS,OAMX,MAAM,IAAI,MAAM,GAAG,KAAK,SAAS,oBAAoB,EAEvD,YAAK,QAAQA,CAAI,GACjB2G,GAAAC,EAAAzK,EAAA,KAAK6I,GAAO,QAAO,YAAnB,MAAA2B,EAAA,KAAAC,EAA+B5G,EAAM,OACrC6G,GAAAC,EAAA3K,EAAA,KAAK6I,GAAO,QAAO,YAAnB,MAAA6B,EAAA,KAAAC,EACE9G,EACA,KAAK,MAAM,MACX,MAEKA,CACT,OAAS4D,EAAO,CACd,GAAIA,aAAiBP,GAAgB,CACnC,GAAIO,EAAM,OACR,OAAOzH,EAAA,KAAK+I,GAAS,QACvB,GAAWtB,EAAM,OAAQ,CACvB,GAAI,KAAK,MAAM,OAAS,OACtB,MAAMA,EAER,OAAO,KAAK,MAAM,IACpB,CACF,CACA,MAAA4B,EAAA,KAAKX,EAAAY,GAAL,UAAe,CACb,KAAM,QACN,MAAA7B,CAAA,IAEFmD,GAAAC,EAAA7K,EAAA,KAAK6I,GAAO,QAAO,UAAnB,MAAA+B,EAAA,KAAAC,EACEpD,EACA,OAEFqD,GAAAC,EAAA/K,EAAA,KAAK6I,GAAO,QAAO,YAAnB,MAAAiC,EAAA,KAAAC,EACE,KAAK,MAAM,KACXtD,EACA,MAEIA,CACR,QAAA,CACE,KAAK,WAAA,CACP,CACF,CA2EF,EAzXEkB,GAAA,YACAC,GAAA,YACAC,EAAA,YACAC,GAAA,YACAC,EAAA,YACAC,GAAA,YACAC,GAAA,YAPUP,EAAA,YAgTVY,WAAU0B,EAAQ,CAChB,MAAMC,EAAW1B,GAAU,CACzB,OAAQyB,EAAO,KAAA,CACb,IAAK,SACH,MAAO,CACL,GAAGzB,EACH,kBAAmByB,EAAO,aAC1B,mBAAoBA,EAAO,KAAA,EAE/B,IAAK,QACH,MAAO,CACL,GAAGzB,EACH,YAAa,QAAA,EAEjB,IAAK,WACH,MAAO,CACL,GAAGA,EACH,YAAa,UAAA,EAEjB,IAAK,QACH,MAAO,CACL,GAAGA,EACH,GAAG2B,GAAW3B,EAAM,KAAM,KAAK,OAAO,EACtC,UAAWyB,EAAO,MAAQ,IAAA,EAE9B,IAAK,UACH,MAAMG,EAAW,CACf,GAAG5B,EACH,KAAMyB,EAAO,KACb,gBAAiBzB,EAAM,gBAAkB,EACzC,cAAeyB,EAAO,eAAiB,KAAK,IAAA,EAC5C,MAAO,KACP,cAAe,GACf,OAAQ,UACR,GAAG,CAACA,EAAO,QAAU,CACnB,YAAa,OACb,kBAAmB,EACnB,mBAAoB,IAAA,CACtB,EAEF,OAAAjL,EAAA,KAAK6I,GAAeoC,EAAO,OAASG,EAAW,QACxCA,EACT,IAAK,QACH,MAAM1D,EAAQuD,EAAO,MACrB,MAAO,CACL,GAAGzB,EACH,MAAA9B,EACA,iBAAkB8B,EAAM,iBAAmB,EAC3C,eAAgB,KAAK,IAAA,EACrB,kBAAmBA,EAAM,kBAAoB,EAC7C,mBAAoB9B,EACpB,YAAa,OACb,OAAQ,OAAA,EAEZ,IAAK,aACH,MAAO,CACL,GAAG8B,EACH,cAAe,EAAA,EAEnB,IAAK,WACH,MAAO,CACL,GAAGA,EACH,GAAGyB,EAAO,KAAA,CACZ,CAEN,EACA,KAAK,MAAQC,EAAQ,KAAK,KAAK,EAC/B3E,EAAc,MAAM,IAAM,CACxB,KAAK,UAAU,QAASqD,GAAa,CACnCA,EAAS,cAAA,CACX,CAAC,EACD3J,EAAA,KAAK6I,GAAO,OAAO,CAAE,MAAO,KAAM,KAAM,UAAW,OAAAmC,EAAQ,CAC7D,CAAC,CACH,EAzXUtL,IA2XZ,SAASwL,GAAWrH,EAAM7B,EAAS,CACjC,MAAO,CACL,kBAAmB,EACnB,mBAAoB,KACpB,YAAagF,GAAShF,EAAQ,WAAW,EAAI,WAAa,SAC1D,GAAG6B,IAAS,QAAU,CACpB,MAAO,KACP,OAAQ,SAAA,CACV,CAEJ,CACA,SAASqF,GAAgBlH,EAAS,CAChC,MAAM6B,EAAO,OAAO7B,EAAQ,aAAgB,WAAaA,EAAQ,cAAgBA,EAAQ,YACnFoJ,EAAUvH,IAAS,OACnBwH,EAAuBD,EAAU,OAAOpJ,EAAQ,sBAAyB,WAAaA,EAAQ,qBAAA,EAAyBA,EAAQ,qBAAuB,EAC5J,MAAO,CACL,KAAA6B,EACA,gBAAiB,EACjB,cAAeuH,EAAUC,GAAwB,KAAK,MAAQ,EAC9D,MAAO,KACP,iBAAkB,EAClB,eAAgB,EAChB,kBAAmB,EACnB,mBAAoB,KACpB,UAAW,KACX,cAAe,GACf,OAAQD,EAAU,UAAY,UAC9B,YAAa,MAAA,CAEjB,8ECpZIE,IAAgB5L,GAAA,cAAcR,EAAa,CAC7C,YAAYqM,EAAQvJ,EAAS,CAC3B,MAAK,EAFWrC,EAAA,KAAA6L,GAUlB7L,EAAA,KAAAmJ,GACAnJ,EAAA,KAAA8L,GACA9L,EAAA,KAAA+L,IACA/L,EAAA,KAAAgM,GACAhM,EAAA,KAAAiM,IACAjM,EAAA,KAAAkM,IACAlM,EAAA,KAAAmM,GACAnM,EAAA,KAAAoM,IACApM,EAAA,KAAAqM,IACArM,EAAA,KAAAsM,IAGAtM,EAAA,KAAAuM,IACAvM,EAAA,KAAAwM,IACAxM,EAAA,KAAAyM,IACAzM,EAAA,KAAA0M,IACA1M,EAAA,KAAA2M,GAAgC,IAAI,KAvBlC,KAAK,QAAUtK,EACfjC,EAAA,KAAK+I,EAAUyC,GACfxL,EAAA,KAAKgM,GAAe,MACpBhM,EAAA,KAAK+L,EAAmB3G,GAAe,GACvC,KAAK,YAAW,EAChB,KAAK,WAAWnD,CAAO,CACzB,CAkBA,aAAc,CACZ,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,CACvC,CACA,aAAc,CACR,KAAK,UAAU,OAAS,IAC1BhC,EAAA,KAAKyL,GAAc,YAAY,IAAI,EAC/Bc,GAAmBvM,EAAA,KAAKyL,GAAe,KAAK,OAAO,EACrDpC,EAAA,KAAKmC,EAAAgB,IAAL,WAEA,KAAK,aAAY,EAEnBnD,EAAA,KAAKmC,EAAAiB,IAAL,WAEJ,CACA,eAAgB,CACT,KAAK,gBACR,KAAK,QAAO,CAEhB,CACA,wBAAyB,CACvB,OAAOC,GACL1M,EAAA,KAAKyL,GACL,KAAK,QACL,KAAK,QAAQ,kBACnB,CACE,CACA,0BAA2B,CACzB,OAAOiB,GACL1M,EAAA,KAAKyL,GACL,KAAK,QACL,KAAK,QAAQ,oBACnB,CACE,CACA,SAAU,CACR,KAAK,UAA4B,IAAI,IACrCpC,EAAA,KAAKmC,EAAAmB,IAAL,WACAtD,EAAA,KAAKmC,EAAAoB,IAAL,WACA5M,EAAA,KAAKyL,GAAc,eAAe,IAAI,CACxC,CACA,WAAWzJ,EAAS,CAClB,MAAM6K,EAAc,KAAK,QACnBC,EAAY9M,EAAA,KAAKyL,GAEvB,GADA,KAAK,QAAUzL,EAAA,KAAK8I,GAAQ,oBAAoB9G,CAAO,EACnD,KAAK,QAAQ,UAAY,QAAU,OAAO,KAAK,QAAQ,SAAY,WAAa,OAAO,KAAK,QAAQ,SAAY,YAAc,OAAOjB,EAAe,KAAK,QAAQ,QAASf,EAAA,KAAKyL,EAAa,GAAM,UACpM,MAAM,IAAI,MACR,uEACR,EAEIpC,EAAA,KAAKmC,EAAAuB,IAAL,WACA/M,EAAA,KAAKyL,GAAc,WAAW,KAAK,OAAO,EACtCoB,EAAY,YAAc,CAAC1J,GAAoB,KAAK,QAAS0J,CAAW,GAC1E7M,EAAA,KAAK8I,GAAQ,cAAa,EAAG,OAAO,CAClC,KAAM,yBACN,MAAO9I,EAAA,KAAKyL,GACZ,SAAU,IAClB,CAAO,EAEH,MAAMuB,EAAU,KAAK,aAAY,EAC7BA,GAAWC,GACbjN,EAAA,KAAKyL,GACLqB,EACA,KAAK,QACLD,CACN,GACMxD,EAAA,KAAKmC,EAAAgB,IAAL,WAEF,KAAK,aAAY,EACbQ,IAAYhN,EAAA,KAAKyL,KAAkBqB,GAAa/L,EAAe,KAAK,QAAQ,QAASf,EAAA,KAAKyL,EAAa,IAAM1K,EAAe8L,EAAY,QAAS7M,EAAA,KAAKyL,EAAa,GAAK5K,GAAiB,KAAK,QAAQ,UAAWb,EAAA,KAAKyL,EAAa,IAAM5K,GAAiBgM,EAAY,UAAW7M,EAAA,KAAKyL,EAAa,IACrSpC,EAAA,KAAKmC,EAAA0B,IAAL,WAEF,MAAMC,EAAsB9D,EAAA,KAAKmC,EAAA4B,IAAL,WACxBJ,IAAYhN,EAAA,KAAKyL,KAAkBqB,GAAa/L,EAAe,KAAK,QAAQ,QAASf,EAAA,KAAKyL,EAAa,IAAM1K,EAAe8L,EAAY,QAAS7M,EAAA,KAAKyL,EAAa,GAAK0B,IAAwBnN,EAAA,KAAKqM,MACvMhD,EAAA,KAAKmC,EAAA6B,IAAL,UAA4BF,EAEhC,CACA,oBAAoBnL,EAAS,CAC3B,MAAMlB,EAAQd,EAAA,KAAK8I,GAAQ,cAAa,EAAG,MAAM9I,EAAA,KAAK8I,GAAS9G,CAAO,EAChEI,EAAS,KAAK,aAAatB,EAAOkB,CAAO,EAC/C,OAAIsL,GAAsC,KAAMlL,CAAM,IACpDrC,EAAA,KAAK4L,EAAiBvJ,GACtBrC,EAAA,KAAK8L,GAAwB,KAAK,SAClC9L,EAAA,KAAK6L,GAAsB5L,EAAA,KAAKyL,GAAc,QAEzCrJ,CACT,CACA,kBAAmB,CACjB,OAAOpC,EAAA,KAAK2L,EACd,CACA,YAAYvJ,EAAQmL,EAAe,CACjC,OAAO,IAAI,MAAMnL,EAAQ,CACvB,IAAK,CAACoL,EAAQ3O,KACZ,KAAK,UAAUA,CAAG,EAClB0O,GAAA,MAAAA,EAAgB1O,GACZA,IAAQ,YACV,KAAK,UAAU,MAAM,EACjB,CAAC,KAAK,QAAQ,+BAAiCmB,EAAA,KAAK8L,GAAiB,SAAW,WAClF9L,EAAA,KAAK8L,GAAiB,OACpB,IAAI,MACF,2DAChB,CACA,GAGe,QAAQ,IAAI0B,EAAQ3O,CAAG,EAEtC,CAAK,CACH,CACA,UAAUA,EAAK,CACbmB,EAAA,KAAKsM,IAAc,IAAIzN,CAAG,CAC5B,CACA,iBAAkB,CAChB,OAAOmB,EAAA,KAAKyL,EACd,CACA,QAAQ,CAAE,GAAGzJ,CAAO,EAAK,GAAI,CAC3B,OAAO,KAAK,MAAM,CAChB,GAAGA,CACT,CAAK,CACH,CACA,gBAAgBA,EAAS,CACvB,MAAMyL,EAAmBzN,EAAA,KAAK8I,GAAQ,oBAAoB9G,CAAO,EAC3DlB,EAAQd,EAAA,KAAK8I,GAAQ,cAAa,EAAG,MAAM9I,EAAA,KAAK8I,GAAS2E,CAAgB,EAC/E,OAAO3M,EAAM,MAAK,EAAG,KAAK,IAAM,KAAK,aAAaA,EAAO2M,CAAgB,CAAC,CAC5E,CACA,MAAMnJ,EAAc,CAClB,OAAO+E,EAAA,KAAKmC,EAAAgB,IAAL,UAAmB,CACxB,GAAGlI,EACH,cAAeA,EAAa,eAAiB,EACnD,GAAO,KAAK,KACN,KAAK,aAAY,EACVtE,EAAA,KAAK2L,GACb,CACH,CA4DA,aAAa7K,EAAOkB,EAAS,QAC3B,MAAM8K,EAAY9M,EAAA,KAAKyL,GACjBoB,EAAc,KAAK,QACnBa,EAAa1N,EAAA,KAAK2L,GAClBgC,EAAkB3N,EAAA,KAAK4L,IACvBgC,EAAoB5N,EAAA,KAAK6L,IAEzBgC,EADc/M,IAAUgM,EACUhM,EAAM,MAAQd,EAAA,KAAK0L,IACrD,CAAE,MAAAnC,CAAK,EAAKzI,EAClB,IAAIqK,EAAW,CAAE,GAAG5B,CAAK,EACrBuE,EAAoB,GACpBjK,EACJ,GAAI7B,EAAQ,mBAAoB,CAC9B,MAAMgL,EAAU,KAAK,aAAY,EAC3Be,EAAe,CAACf,GAAWT,GAAmBzL,EAAOkB,CAAO,EAC5DgM,GAAkBhB,GAAWC,GAAsBnM,EAAOgM,EAAW9K,EAAS6K,CAAW,GAC3FkB,GAAgBC,MAClB7C,EAAW,CACT,GAAGA,EACH,GAAGD,GAAW3B,EAAM,KAAMzI,EAAM,OAAO,CACjD,GAEUkB,EAAQ,qBAAuB,gBACjCmJ,EAAS,YAAc,OAE3B,CACA,GAAI,CAAE,MAAA1D,EAAO,eAAAwG,EAAgB,OAAApM,CAAM,EAAKsJ,EACxCtH,EAAOsH,EAAS,KAChB,IAAI+C,EAAa,GACjB,GAAIlM,EAAQ,kBAAoB,QAAU6B,IAAS,QAAUhC,IAAW,UAAW,CACjF,IAAIsM,EACAT,GAAA,MAAAA,EAAY,mBAAqB1L,EAAQ,mBAAoB4L,GAAA,YAAAA,EAAmB,kBAClFO,EAAkBT,EAAW,KAC7BQ,EAAa,IAEbC,EAAkB,OAAOnM,EAAQ,iBAAoB,WAAaA,EAAQ,iBACxEtC,GAAAM,EAAA,KAAKkM,MAAL,YAAAxM,GAAgC,MAAM,KACtCM,EAAA,KAAKkM,GACf,EAAYlK,EAAQ,gBAEVmM,IAAoB,SACtBtM,EAAS,UACTgC,EAAOF,GACL+J,GAAA,YAAAA,EAAY,KACZS,EACAnM,CACV,EACQ8L,EAAoB,GAExB,CACA,GAAI9L,EAAQ,QAAU6B,IAAS,QAAU,CAACqK,EACxC,GAAIR,GAAc7J,KAAS8J,GAAA,YAAAA,EAAiB,OAAQ3L,EAAQ,SAAWhC,EAAA,KAAKgM,IAC1EnI,EAAO7D,EAAA,KAAKiM,QAEZ,IAAI,CACFlM,EAAA,KAAKiM,GAAYhK,EAAQ,QACzB6B,EAAO7B,EAAQ,OAAO6B,CAAI,EAC1BA,EAAOF,GAAY+J,GAAA,YAAAA,EAAY,KAAM7J,EAAM7B,CAAO,EAClDjC,EAAA,KAAKkM,GAAgBpI,GACrB9D,EAAA,KAAKgM,GAAe,KACtB,OAASqC,EAAa,CACpBrO,EAAA,KAAKgM,GAAeqC,EACtB,CAGApO,EAAA,KAAK+L,MACPtE,EAAQzH,EAAA,KAAK+L,IACblI,EAAO7D,EAAA,KAAKiM,IACZgC,EAAiB,KAAK,IAAG,EACzBpM,EAAS,SAEX,MAAMwM,EAAalD,EAAS,cAAgB,WACtCmD,EAAYzM,IAAW,UACvB0M,EAAU1M,IAAW,QACrB2M,EAAYF,GAAaD,EACzBjD,EAAUvH,IAAS,OA6BnB4K,EA5BS,CACb,OAAA5M,EACA,YAAasJ,EAAS,YACtB,UAAAmD,EACA,UAAWzM,IAAW,UACtB,QAAA0M,EACA,iBAAkBC,EAClB,UAAAA,EACA,KAAA3K,EACA,cAAesH,EAAS,cACxB,MAAA1D,EACA,eAAAwG,EACA,aAAc9C,EAAS,kBACvB,cAAeA,EAAS,mBACxB,iBAAkBA,EAAS,iBAC3B,UAAWA,EAAS,gBAAkB,GAAKA,EAAS,iBAAmB,EACvE,oBAAqBA,EAAS,gBAAkB0C,EAAkB,iBAAmB1C,EAAS,iBAAmB0C,EAAkB,iBACnI,WAAAQ,EACA,aAAcA,GAAc,CAACC,EAC7B,eAAgBC,GAAW,CAACnD,EAC5B,SAAUD,EAAS,cAAgB,SACnC,kBAAA2C,EACA,eAAgBS,GAAWnD,EAC3B,QAASsD,GAAQ5N,EAAOkB,CAAO,EAC/B,QAAS,KAAK,QACd,QAAShC,EAAA,KAAK8L,GACd,UAAW/K,EAAeiB,EAAQ,QAASlB,CAAK,IAAM,EAC5D,EAEI,GAAI,KAAK,QAAQ,8BAA+B,CAC9C,MAAM6N,EAA8BtJ,IAAa,CAC3CoJ,EAAW,SAAW,QACxBpJ,GAAS,OAAOoJ,EAAW,KAAK,EACvBA,EAAW,OAAS,QAC7BpJ,GAAS,QAAQoJ,EAAW,IAAI,CAEpC,EACMG,EAAmB,IAAM,CAC7B,MAAMC,GAAU9O,EAAA,KAAK+L,EAAmB2C,EAAW,QAAUtJ,GAAe,GAC5EwJ,EAA2BE,EAAO,CACpC,EACMC,GAAe9O,EAAA,KAAK8L,GAC1B,OAAQgD,GAAa,OAAM,CACzB,IAAK,UACChO,EAAM,YAAcgM,EAAU,WAChC6B,EAA2BG,EAAY,EAEzC,MACF,IAAK,aACCL,EAAW,SAAW,SAAWA,EAAW,OAASK,GAAa,QACpEF,EAAgB,EAElB,MACF,IAAK,YACCH,EAAW,SAAW,SAAWA,EAAW,QAAUK,GAAa,SACrEF,EAAgB,EAElB,KACV,CACI,CACA,OAAOH,CACT,CACA,cAAe,CACb,MAAMf,EAAa1N,EAAA,KAAK2L,GAClB8C,EAAa,KAAK,aAAazO,EAAA,KAAKyL,GAAe,KAAK,OAAO,EAMrE,GALA1L,EAAA,KAAK6L,GAAsB5L,EAAA,KAAKyL,GAAc,OAC9C1L,EAAA,KAAK8L,GAAwB,KAAK,SAC9B7L,EAAA,KAAK4L,IAAoB,OAAS,QACpC7L,EAAA,KAAKmM,GAA4BlM,EAAA,KAAKyL,IAEpCtI,GAAoBsL,EAAYf,CAAU,EAC5C,OAEF3N,EAAA,KAAK4L,EAAiB8C,GACtB,MAAMM,EAAwB,IAAM,CAClC,GAAI,CAACrB,EACH,MAAO,GAET,KAAM,CAAE,oBAAAsB,GAAwB,KAAK,QAC/BC,EAA2B,OAAOD,GAAwB,WAAaA,EAAmB,EAAKA,EACrG,GAAIC,IAA6B,OAAS,CAACA,GAA4B,CAACjP,EAAA,KAAKsM,IAAc,KACzF,MAAO,GAET,MAAM4C,EAAgB,IAAI,IACxBD,GAA4BjP,EAAA,KAAKsM,GACzC,EACM,OAAI,KAAK,QAAQ,cACf4C,EAAc,IAAI,OAAO,EAEpB,OAAO,KAAKlP,EAAA,KAAK2L,EAAc,EAAE,KAAM9M,GAAQ,CACpD,MAAMsQ,EAAWtQ,EAEjB,OADgBmB,EAAA,KAAK2L,GAAewD,CAAQ,IAAMzB,EAAWyB,CAAQ,GACnDD,EAAc,IAAIC,CAAQ,CAC9C,CAAC,CACH,EACA9F,EAAA,KAAKmC,EAAA4D,IAAL,UAAa,CAAE,UAAWL,EAAqB,CAAE,EACnD,CAcA,eAAgB,CACd,KAAK,aAAY,EACb,KAAK,gBACP1F,EAAA,KAAKmC,EAAAiB,IAAL,UAEJ,CAcF,EA7ZE3D,EAAA,YACA2C,EAAA,YACAC,GAAA,YACAC,EAAA,YACAC,GAAA,YACAC,GAAA,YACAC,EAAA,YACAC,GAAA,YACAC,GAAA,YACAC,GAAA,YAGAC,GAAA,YACAC,GAAA,YACAC,GAAA,YACAC,GAAA,YACAC,GAAA,YA1BkBd,EAAA,YA+JlBgB,GAAa,SAAClI,EAAc,CAC1B+E,EAAA,KAAKmC,EAAAuB,IAAL,WACA,IAAItD,EAAUzJ,EAAA,KAAKyL,GAAc,MAC/B,KAAK,QACLnH,CACN,EACI,OAAKA,GAAA,MAAAA,EAAc,eACjBmF,EAAUA,EAAQ,MAAMrJ,CAAI,GAEvBqJ,CACT,EACAyD,GAAmB,UAAG,CACpB7D,EAAA,KAAKmC,EAAAmB,IAAL,WACA,MAAM/L,EAAYC,GAChB,KAAK,QAAQ,UACbb,EAAA,KAAKyL,EACX,EACI,GAAItL,IAAYH,EAAA,KAAK2L,GAAe,SAAW,CAACnL,GAAeI,CAAS,EACtE,OAGF,MAAM6C,EADO/C,GAAeV,EAAA,KAAK2L,GAAe,cAAe/K,CAAS,EACjD,EACvBb,EAAA,KAAKoM,GAAkBlM,GAAe,WAAW,IAAM,CAChDD,EAAA,KAAK2L,GAAe,SACvB,KAAK,aAAY,CAErB,EAAGlI,CAAO,EACZ,EACA2J,GAAuB,UAAG,CACxB,OAAQ,OAAO,KAAK,QAAQ,iBAAoB,WAAa,KAAK,QAAQ,gBAAgBpN,EAAA,KAAKyL,EAAa,EAAI,KAAK,QAAQ,kBAAoB,EACnJ,EACA4B,GAAsB,SAACgC,EAAc,CACnChG,EAAA,KAAKmC,EAAAoB,IAAL,WACA7M,EAAA,KAAKsM,GAA0BgD,GAC3B,EAAAlP,IAAYY,EAAe,KAAK,QAAQ,QAASf,EAAA,KAAKyL,EAAa,IAAM,IAAS,CAACjL,GAAeR,EAAA,KAAKqM,GAAuB,GAAKrM,EAAA,KAAKqM,MAA4B,IAGxKtM,EAAA,KAAKqM,GAAqBnM,GAAe,YAAY,IAAM,EACrD,KAAK,QAAQ,6BAA+BiF,GAAa,UAAS,IACpEmE,EAAA,KAAKmC,EAAAgB,IAAL,UAEJ,EAAGxM,EAAA,KAAKqM,GAAuB,EACjC,EACAI,GAAa,UAAG,CACdpD,EAAA,KAAKmC,EAAA0B,IAAL,WACA7D,EAAA,KAAKmC,EAAA6B,IAAL,UAA4BhE,EAAA,KAAKmC,EAAA4B,IAAL,WAC9B,EACAT,GAAkB,UAAG,CACf3M,EAAA,KAAKmM,MACPlM,GAAe,aAAaD,EAAA,KAAKmM,GAAe,EAChDpM,EAAA,KAAKoM,GAAkB,QAE3B,EACAS,GAAqB,UAAG,CAClB5M,EAAA,KAAKoM,MACPnM,GAAe,cAAcD,EAAA,KAAKoM,GAAkB,EACpDrM,EAAA,KAAKqM,GAAqB,QAE9B,EA8KAW,GAAY,UAAG,CACb,MAAMjM,EAAQd,EAAA,KAAK8I,GAAQ,cAAa,EAAG,MAAM9I,EAAA,KAAK8I,GAAS,KAAK,OAAO,EAC3E,GAAIhI,IAAUd,EAAA,KAAKyL,GACjB,OAEF,MAAMqB,EAAY9M,EAAA,KAAKyL,GACvB1L,EAAA,KAAK0L,EAAgB3K,GACrBf,EAAA,KAAK2L,GAA4B5K,EAAM,OACnC,KAAK,iBACPgM,GAAA,MAAAA,EAAW,eAAe,MAC1BhM,EAAM,YAAY,IAAI,EAE1B,EAOAsO,GAAO,SAACE,EAAe,CACrBhJ,EAAc,MAAM,IAAM,CACpBgJ,EAAc,WAChB,KAAK,UAAU,QAASnQ,GAAa,CACnCA,EAASa,EAAA,KAAK2L,EAAc,CAC9B,CAAC,EAEH3L,EAAA,KAAK8I,GAAQ,cAAa,EAAG,OAAO,CAClC,MAAO9I,EAAA,KAAKyL,GACZ,KAAM,wBACd,CAAO,CACH,CAAC,CACH,EAtakB/L,IAwapB,SAAS6P,GAAkBzO,EAAOkB,EAAS,CACzC,OAAOjB,EAAeiB,EAAQ,QAASlB,CAAK,IAAM,IAASA,EAAM,MAAM,OAAS,QAAU,EAAEA,EAAM,MAAM,SAAW,SAAWkB,EAAQ,eAAiB,GACzJ,CACA,SAASuK,GAAmBzL,EAAOkB,EAAS,CAC1C,OAAOuN,GAAkBzO,EAAOkB,CAAO,GAAKlB,EAAM,MAAM,OAAS,QAAU4L,GAAc5L,EAAOkB,EAASA,EAAQ,cAAc,CACjI,CACA,SAAS0K,GAAc5L,EAAOkB,EAASwN,EAAO,CAC5C,GAAIzO,EAAeiB,EAAQ,QAASlB,CAAK,IAAM,IAASD,GAAiBmB,EAAQ,UAAWlB,CAAK,IAAM,SAAU,CAC/G,MAAML,EAAQ,OAAO+O,GAAU,WAAaA,EAAM1O,CAAK,EAAI0O,EAC3D,OAAO/O,IAAU,UAAYA,IAAU,IAASiO,GAAQ5N,EAAOkB,CAAO,CACxE,CACA,MAAO,EACT,CACA,SAASiL,GAAsBnM,EAAOgM,EAAW9K,EAAS6K,EAAa,CACrE,OAAQ/L,IAAUgM,GAAa/L,EAAe8L,EAAY,QAAS/L,CAAK,IAAM,MAAW,CAACkB,EAAQ,UAAYlB,EAAM,MAAM,SAAW,UAAY4N,GAAQ5N,EAAOkB,CAAO,CACzK,CACA,SAAS0M,GAAQ5N,EAAOkB,EAAS,CAC/B,OAAOjB,EAAeiB,EAAQ,QAASlB,CAAK,IAAM,IAASA,EAAM,cAAcD,GAAiBmB,EAAQ,UAAWlB,CAAK,CAAC,CAC3H,CACA,SAASwM,GAAsC3D,EAAU8F,EAAkB,CACzE,MAAK,CAAAtM,GAAoBwG,EAAS,iBAAgB,EAAI8F,CAAgB,CAIxE,CC/cA,SAASC,GAAsBC,EAAO,CACpC,MAAO,CACL,QAAS,CAACvF,EAAStJ,IAAU,eAC3B,MAAMkB,EAAUoI,EAAQ,QAClBwF,GAAYtF,GAAAZ,GAAAhK,EAAA0K,EAAQ,eAAR,YAAA1K,EAAsB,OAAtB,YAAAgK,EAA4B,YAA5B,YAAAY,EAAuC,UACnDuF,IAAWtF,EAAAH,EAAQ,MAAM,OAAd,YAAAG,EAAoB,QAAS,CAAA,EACxCuF,IAAgBrF,EAAAL,EAAQ,MAAM,OAAd,YAAAK,EAAoB,aAAc,CAAA,EACxD,IAAIrI,EAAS,CAAE,MAAO,CAAA,EAAI,WAAY,CAAA,CAAE,EACpC2N,EAAc,EAClB,MAAM/F,EAAU,SAAY,CAC1B,IAAIgG,EAAY,GAChB,MAAMlG,EAAqBC,GAAW,CACpC,OAAO,eAAeA,EAAQ,SAAU,CACtC,WAAY,GACZ,IAAK,KACCK,EAAQ,OAAO,QACjB4F,EAAY,GAEZ5F,EAAQ,OAAO,iBAAiB,QAAS,IAAM,CAC7C4F,EAAY,EACd,CAAC,EAEI5F,EAAQ,OAE7B,CAAW,CACH,EACMH,EAAU5F,GAAc+F,EAAQ,QAASA,EAAQ,YAAY,EAC7D6F,EAAY,MAAOpM,EAAMqM,EAAOC,IAAa,CACjD,GAAIH,EACF,OAAO,QAAQ,OAAM,EAEvB,GAAIE,GAAS,MAAQrM,EAAK,MAAM,OAC9B,OAAO,QAAQ,QAAQA,CAAI,EAa7B,MAAMqG,IAXuB,IAAM,CACjC,MAAMC,EAAkB,CACtB,OAAQC,EAAQ,OAChB,SAAUA,EAAQ,SAClB,UAAW8F,EACX,UAAWC,EAAW,WAAa,UACnC,KAAM/F,EAAQ,QAAQ,IACpC,EACY,OAAAN,EAAkBK,CAAe,EAC1BA,CACT,GAC2C,EACrCiG,EAAO,MAAMnG,EAAQC,EAAc,EACnC,CAAE,SAAAmG,IAAajG,EAAQ,QACvBkG,EAAQH,EAAWhM,GAAaL,GACtC,MAAO,CACL,MAAOwM,EAAMzM,EAAK,MAAOuM,EAAMC,EAAQ,EACvC,WAAYC,EAAMzM,EAAK,WAAYqM,EAAOG,EAAQ,CAC9D,CACQ,EACA,GAAIT,GAAaC,EAAS,OAAQ,CAChC,MAAMM,EAAWP,IAAc,WACzBW,EAAcJ,EAAWK,GAAuBC,GAChDC,EAAU,CACd,MAAOb,EACP,WAAYC,CACxB,EACgBI,EAAQK,EAAYvO,EAAS0O,CAAO,EAC1CtO,EAAS,MAAM6N,EAAUS,EAASR,EAAOC,CAAQ,CACnD,KAAO,CACL,MAAMQ,EAAiBhB,GAASE,EAAS,OACzC,EAAG,CACD,MAAMK,EAAQH,IAAgB,EAAID,EAAc,CAAC,GAAK9N,EAAQ,iBAAmByO,GAAiBzO,EAASI,CAAM,EACjH,GAAI2N,EAAc,GAAKG,GAAS,KAC9B,MAEF9N,EAAS,MAAM6N,EAAU7N,EAAQ8N,CAAK,EACtCH,GACF,OAASA,EAAcY,EACzB,CACA,OAAOvO,CACT,EACIgI,EAAQ,QAAQ,UAClBA,EAAQ,QAAU,IAAM,SACtB,OAAOV,GAAAhK,EAAA0K,EAAQ,SAAQ,YAAhB,YAAAV,EAAA,KAAAhK,EACLsK,EACA,CACE,OAAQI,EAAQ,OAChB,SAAUA,EAAQ,SAClB,KAAMA,EAAQ,QAAQ,KACtB,OAAQA,EAAQ,MAC9B,EACYtJ,EAEJ,EAEAsJ,EAAQ,QAAUJ,CAEtB,CACJ,CACA,CACA,SAASyG,GAAiBzO,EAAS,CAAE,MAAA2N,EAAO,WAAAiB,CAAU,EAAI,CACxD,MAAMC,EAAYlB,EAAM,OAAS,EACjC,OAAOA,EAAM,OAAS,EAAI3N,EAAQ,iBAChC2N,EAAMkB,CAAS,EACflB,EACAiB,EAAWC,CAAS,EACpBD,CACJ,EAAM,MACN,CACA,SAASJ,GAAqBxO,EAAS,CAAE,MAAA2N,EAAO,WAAAiB,CAAU,EAAI,OAC5D,OAAOjB,EAAM,OAAS,GAAIjQ,EAAAsC,EAAQ,uBAAR,YAAAtC,EAAA,KAAAsC,EAA+B2N,EAAM,CAAC,EAAGA,EAAOiB,EAAW,CAAC,EAAGA,GAAc,MACzG,uBCxGIE,IAAWpR,GAAA,cAAc4I,EAAU,CAKrC,YAAY3J,EAAQ,CAClB,MAAK,EANMgB,EAAA,KAAAoR,GACbpR,EAAA,KAAAmJ,IACAnJ,EAAA,KAAAqR,GACArR,EAAA,KAAAsR,GACAtR,EAAA,KAAAoJ,IAGEhJ,EAAA,KAAK+I,GAAUnK,EAAO,QACtB,KAAK,WAAaA,EAAO,WACzBoB,EAAA,KAAKkR,EAAiBtS,EAAO,eAC7BoB,EAAA,KAAKiR,EAAa,CAAA,GAClB,KAAK,MAAQrS,EAAO,OAASuK,GAAe,EAC5C,KAAK,WAAWvK,EAAO,OAAO,EAC9B,KAAK,WAAU,CACjB,CACA,WAAWqD,EAAS,CAClB,KAAK,QAAUA,EACf,KAAK,aAAa,KAAK,QAAQ,MAAM,CACvC,CACA,IAAI,MAAO,CACT,OAAO,KAAK,QAAQ,IACtB,CACA,YAAY2H,EAAU,CACf3J,EAAA,KAAKgR,GAAW,SAASrH,CAAQ,IACpC3J,EAAA,KAAKgR,GAAW,KAAKrH,CAAQ,EAC7B,KAAK,eAAc,EACnB3J,EAAA,KAAKiR,GAAe,OAAO,CACzB,KAAM,gBACN,SAAU,KACV,SAAAtH,CACR,CAAO,EAEL,CACA,eAAeA,EAAU,CACvB5J,EAAA,KAAKiR,EAAahR,EAAA,KAAKgR,GAAW,OAAQpH,GAAMA,IAAMD,CAAQ,GAC9D,KAAK,WAAU,EACf3J,EAAA,KAAKiR,GAAe,OAAO,CACzB,KAAM,kBACN,SAAU,KACV,SAAAtH,CACN,CAAK,CACH,CACA,gBAAiB,CACV3J,EAAA,KAAKgR,GAAW,SACf,KAAK,MAAM,SAAW,UACxB,KAAK,WAAU,EAEfhR,EAAA,KAAKiR,GAAe,OAAO,IAAI,EAGrC,CACA,UAAW,OACT,QAAOvR,EAAAM,EAAA,KAAK+I,MAAL,YAAArJ,EAAe,aACtB,KAAK,QAAQ,KAAK,MAAM,SAAS,CACnC,CACA,MAAM,QAAQwR,EAAW,+CACvB,MAAMC,EAAa,IAAM,CACvB9H,EAAA,KAAK0H,EAAAzH,IAAL,UAAe,CAAE,KAAM,UAAU,EACnC,EACM8H,EAAoB,CACxB,OAAQpR,EAAA,KAAK8I,IACb,KAAM,KAAK,QAAQ,KACnB,YAAa,KAAK,QAAQ,WAChC,EACI/I,EAAA,KAAKgJ,GAAW5B,GAAc,CAC5B,GAAI,IACG,KAAK,QAAQ,WAGX,KAAK,QAAQ,WAAW+J,EAAWE,CAAiB,EAFlD,QAAQ,OAAO,IAAI,MAAM,qBAAqB,CAAC,EAI1D,OAAQ,CAACrK,EAAcU,IAAU,CAC/B4B,EAAA,KAAK0H,EAAAzH,IAAL,UAAe,CAAE,KAAM,SAAU,aAAAvC,EAAc,MAAAU,GACjD,EACA,QAAS,IAAM,CACb4B,EAAA,KAAK0H,EAAAzH,IAAL,UAAe,CAAE,KAAM,OAAO,EAChC,EACA,WAAA6H,EACA,MAAO,KAAK,QAAQ,OAAS,EAC7B,WAAY,KAAK,QAAQ,WACzB,YAAa,KAAK,QAAQ,YAC1B,OAAQ,IAAMnR,EAAA,KAAKiR,GAAe,OAAO,IAAI,CACnD,CAAK,GACD,MAAMI,EAAW,KAAK,MAAM,SAAW,UACjCC,EAAW,CAACtR,EAAA,KAAK+I,IAAS,SAAQ,EACxC,GAAI,CACF,GAAIsI,EACFF,EAAU,MACL,CACL9H,EAAA,KAAK0H,EAAAzH,IAAL,UAAe,CAAE,KAAM,UAAW,UAAA4H,EAAW,SAAAI,IAC7C,OAAM5H,GAAAhK,EAAAM,EAAA,KAAKiR,GAAe,QAAO,WAA3B,YAAAvH,EAAA,KAAAhK,EACJwR,EACA,KACAE,IAEF,MAAMhH,EAAU,OAAMG,GAAAD,EAAA,KAAK,SAAQ,WAAb,YAAAC,EAAA,KAAAD,EACpB4G,EACAE,IAEEhH,IAAY,KAAK,MAAM,SACzBf,EAAA,KAAK0H,EAAAzH,IAAL,UAAe,CACb,KAAM,UACN,QAAAc,EACA,UAAA8G,EACA,SAAAI,CACZ,EAEM,CACA,MAAMzN,EAAO,MAAM7D,EAAA,KAAK+I,IAAS,MAAK,EACtC,cAAMyB,GAAAC,EAAAzK,EAAA,KAAKiR,GAAe,QAAO,YAA3B,YAAAzG,EAAA,KAAAC,EACJ5G,EACAqN,EACA,KAAK,MAAM,QACX,KACAE,IAEF,OAAM1G,GAAAC,EAAA,KAAK,SAAQ,YAAb,YAAAD,EAAA,KAAAC,EACJ9G,EACAqN,EACA,KAAK,MAAM,QACXE,IAEF,OAAMxG,GAAAC,EAAA7K,EAAA,KAAKiR,GAAe,QAAO,YAA3B,YAAArG,EAAA,KAAAC,EACJhH,EACA,KACA,KAAK,MAAM,UACX,KAAK,MAAM,QACX,KACAuN,IAEF,OAAMtG,GAAAC,EAAA,KAAK,SAAQ,YAAb,YAAAD,EAAA,KAAAC,EACJlH,EACA,KACAqN,EACA,KAAK,MAAM,QACXE,IAEF/H,EAAA,KAAK0H,EAAAzH,IAAL,UAAe,CAAE,KAAM,UAAW,KAAAzF,CAAI,GAC/BA,CACT,OAAS4D,EAAO,CACd,GAAI,CACF,aAAM8J,GAAAC,EAAAxR,EAAA,KAAKiR,GAAe,QAAO,UAA3B,YAAAM,EAAA,KAAAC,EACJ/J,EACAyJ,EACA,KAAK,MAAM,QACX,KACAE,IAEF,OAAMK,GAAAC,EAAA,KAAK,SAAQ,UAAb,YAAAD,EAAA,KAAAC,EACJjK,EACAyJ,EACA,KAAK,MAAM,QACXE,IAEF,OAAMO,IAAAC,EAAA5R,EAAA,KAAKiR,GAAe,QAAO,YAA3B,YAAAU,GAAA,KAAAC,EACJ,OACAnK,EACA,KAAK,MAAM,UACX,KAAK,MAAM,QACX,KACA2J,IAEF,OAAMS,IAAAC,EAAA,KAAK,SAAQ,YAAb,YAAAD,GAAA,KAAAC,EACJ,OACArK,EACAyJ,EACA,KAAK,MAAM,QACXE,IAEI3J,CACR,QAAC,CACC4B,EAAA,KAAK0H,EAAAzH,IAAL,UAAe,CAAE,KAAM,QAAS,MAAA7B,CAAK,EACvC,CACF,QAAC,CACCzH,EAAA,KAAKiR,GAAe,QAAQ,IAAI,CAClC,CACF,CAmEF,EAlPEnI,GAAA,YACAkI,EAAA,YACAC,EAAA,YACAlI,GAAA,YAJagI,EAAA,YAiLbzH,GAAS,SAAC0B,EAAQ,CAChB,MAAMC,EAAW1B,GAAU,CACzB,OAAQyB,EAAO,KAAI,CACjB,IAAK,SACH,MAAO,CACL,GAAGzB,EACH,aAAcyB,EAAO,aACrB,cAAeA,EAAO,KAClC,EACQ,IAAK,QACH,MAAO,CACL,GAAGzB,EACH,SAAU,EACtB,EACQ,IAAK,WACH,MAAO,CACL,GAAGA,EACH,SAAU,EACtB,EACQ,IAAK,UACH,MAAO,CACL,GAAGA,EACH,QAASyB,EAAO,QAChB,KAAM,OACN,aAAc,EACd,cAAe,KACf,MAAO,KACP,SAAUA,EAAO,SACjB,OAAQ,UACR,UAAWA,EAAO,UAClB,YAAa,KAAK,IAAG,CACjC,EACQ,IAAK,UACH,MAAO,CACL,GAAGzB,EACH,KAAMyB,EAAO,KACb,aAAc,EACd,cAAe,KACf,MAAO,KACP,OAAQ,UACR,SAAU,EACtB,EACQ,IAAK,QACH,MAAO,CACL,GAAGzB,EACH,KAAM,OACN,MAAOyB,EAAO,MACd,aAAczB,EAAM,aAAe,EACnC,cAAeyB,EAAO,MACtB,SAAU,GACV,OAAQ,OACpB,CACA,CACI,EACA,KAAK,MAAQC,EAAQ,KAAK,KAAK,EAC/B3E,EAAc,MAAM,IAAM,CACxBtG,EAAA,KAAKgR,GAAW,QAASrH,GAAa,CACpCA,EAAS,iBAAiBqB,CAAM,CAClC,CAAC,EACDhL,EAAA,KAAKiR,GAAe,OAAO,CACzB,SAAU,KACV,KAAM,UACN,OAAAjG,CACR,CAAO,CACH,CAAC,CACH,EAlPatL,IAoPf,SAASwJ,IAAkB,CACzB,MAAO,CACL,QAAS,OACT,KAAM,OACN,MAAO,KACP,aAAc,EACd,cAAe,KACf,SAAU,GACV,OAAQ,OACR,UAAW,OACX,YAAa,CACjB,CACA,eC/PI6I,IAAgBrS,GAAA,cAAcR,EAAa,CAC7C,YAAYP,EAAS,GAAI,CACvB,MAAK,EAMPgB,EAAA,KAAAqS,GACArS,EAAA,KAAAsS,GACAtS,EAAA,KAAAuS,IAPE,KAAK,OAASvT,EACdoB,EAAA,KAAKiS,EAA6B,IAAI,KACtCjS,EAAA,KAAKkS,EAA0B,IAAI,KACnClS,EAAA,KAAKmS,GAAc,EACrB,CAIA,MAAM3G,EAAQvJ,EAASuH,EAAO,CAC5B,MAAM3H,EAAW,IAAIkP,GAAS,CAC5B,OAAAvF,EACA,cAAe,KACf,WAAmB,EAAL4G,GAAA,KAAKD,IAAL,EACd,QAAS3G,EAAO,uBAAuBvJ,CAAO,EAC9C,MAAAuH,CACN,CAAK,EACD,YAAK,IAAI3H,CAAQ,EACVA,CACT,CACA,IAAIA,EAAU,CACZ5B,EAAA,KAAKgS,GAAW,IAAIpQ,CAAQ,EAC5B,MAAMwQ,EAAQC,GAASzQ,CAAQ,EAC/B,GAAI,OAAOwQ,GAAU,SAAU,CAC7B,MAAME,EAAkBtS,EAAA,KAAKiS,GAAQ,IAAIG,CAAK,EAC1CE,EACFA,EAAgB,KAAK1Q,CAAQ,EAE7B5B,EAAA,KAAKiS,GAAQ,IAAIG,EAAO,CAACxQ,CAAQ,CAAC,CAEtC,CACA,KAAK,OAAO,CAAE,KAAM,QAAS,SAAAA,CAAQ,CAAE,CACzC,CACA,OAAOA,EAAU,CACf,GAAI5B,EAAA,KAAKgS,GAAW,OAAOpQ,CAAQ,EAAG,CACpC,MAAMwQ,EAAQC,GAASzQ,CAAQ,EAC/B,GAAI,OAAOwQ,GAAU,SAAU,CAC7B,MAAME,EAAkBtS,EAAA,KAAKiS,GAAQ,IAAIG,CAAK,EAC9C,GAAIE,EACF,GAAIA,EAAgB,OAAS,EAAG,CAC9B,MAAMC,EAAQD,EAAgB,QAAQ1Q,CAAQ,EAC1C2Q,IAAU,IACZD,EAAgB,OAAOC,EAAO,CAAC,CAEnC,MAAWD,EAAgB,CAAC,IAAM1Q,GAChC5B,EAAA,KAAKiS,GAAQ,OAAOG,CAAK,CAG/B,CACF,CACA,KAAK,OAAO,CAAE,KAAM,UAAW,SAAAxQ,CAAQ,CAAE,CAC3C,CACA,OAAOA,EAAU,CACf,MAAMwQ,EAAQC,GAASzQ,CAAQ,EAC/B,GAAI,OAAOwQ,GAAU,SAAU,CAC7B,MAAMI,EAAyBxS,EAAA,KAAKiS,GAAQ,IAAIG,CAAK,EAC/CK,EAAuBD,GAAA,YAAAA,EAAwB,KAClDE,GAAMA,EAAE,MAAM,SAAW,WAE5B,MAAO,CAACD,GAAwBA,IAAyB7Q,CAC3D,KACE,OAAO,EAEX,CACA,QAAQA,EAAU,OAChB,MAAMwQ,EAAQC,GAASzQ,CAAQ,EAC/B,GAAI,OAAOwQ,GAAU,SAAU,CAC7B,MAAMO,GAAgBjT,EAAAM,EAAA,KAAKiS,GAAQ,IAAIG,CAAK,IAAtB,YAAA1S,EAAyB,KAAMgT,GAAMA,IAAM9Q,GAAY8Q,EAAE,MAAM,UACrF,OAAOC,GAAA,YAAAA,EAAe,aAAc,QAAQ,QAAO,CACrD,KACE,QAAO,QAAQ,QAAO,CAE1B,CACA,OAAQ,CACNrM,EAAc,MAAM,IAAM,CACxBtG,EAAA,KAAKgS,GAAW,QAASpQ,GAAa,CACpC,KAAK,OAAO,CAAE,KAAM,UAAW,SAAAA,CAAQ,CAAE,CAC3C,CAAC,EACD5B,EAAA,KAAKgS,GAAW,MAAK,EACrBhS,EAAA,KAAKiS,GAAQ,MAAK,CACpB,CAAC,CACH,CACA,QAAS,CACP,OAAO,MAAM,KAAKjS,EAAA,KAAKgS,EAAU,CACnC,CACA,KAAK9Q,EAAS,CACZ,MAAM0R,EAAmB,CAAE,MAAO,GAAM,GAAG1R,CAAO,EAClD,OAAO,KAAK,OAAM,EAAG,KAClBU,GAAaD,GAAciR,EAAkBhR,CAAQ,CAC5D,CACE,CACA,QAAQV,EAAU,GAAI,CACpB,OAAO,KAAK,OAAM,EAAG,OAAQU,GAAaD,GAAcT,EAASU,CAAQ,CAAC,CAC5E,CACA,OAAOiR,EAAO,CACZvM,EAAc,MAAM,IAAM,CACxB,KAAK,UAAU,QAASnH,GAAa,CACnCA,EAAS0T,CAAK,CAChB,CAAC,CACH,CAAC,CACH,CACA,uBAAwB,CACtB,MAAMC,EAAkB,KAAK,SAAS,OAAQlJ,GAAMA,EAAE,MAAM,QAAQ,EACpE,OAAOtD,EAAc,MACnB,IAAM,QAAQ,IACZwM,EAAgB,IAAKlR,GAAaA,EAAS,SAAQ,EAAG,MAAMxB,CAAI,CAAC,CACzE,CACA,CACE,CACF,EAvGE4R,EAAA,YACAC,EAAA,YACAC,GAAA,YAVkBxS,IAgHpB,SAAS2S,GAASzQ,EAAU,OAC1B,OAAOlC,EAAAkC,EAAS,QAAQ,QAAjB,YAAAlC,EAAwB,EACjC,2BClHIqT,IAAmBrT,GAAA,cAAcR,EAAa,CAKhD,YAAYqM,EAAQvJ,EAAS,CAC3B,MAAK,EANcrC,EAAA,KAAAqT,IACrBrT,EAAA,KAAAmJ,GACAnJ,EAAA,KAAAgM,IACAhM,EAAA,KAAAsT,GACAtT,EAAA,KAAAuT,IAGEnT,EAAA,KAAK+I,EAAUyC,GACf,KAAK,WAAWvJ,CAAO,EACvB,KAAK,YAAW,EAChBqH,EAAA,KAAK2J,GAAAG,IAAL,UACF,CACA,aAAc,CACZ,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,CACnC,CACA,WAAWnR,EAAS,OAClB,MAAM6K,EAAc,KAAK,QACzB,KAAK,QAAU7M,EAAA,KAAK8I,GAAQ,uBAAuB9G,CAAO,EACrDmB,GAAoB,KAAK,QAAS0J,CAAW,GAChD7M,EAAA,KAAK8I,GAAQ,iBAAgB,EAAG,OAAO,CACrC,KAAM,yBACN,SAAU9I,EAAA,KAAKiT,GACf,SAAU,IAClB,CAAO,EAECpG,GAAA,MAAAA,EAAa,aAAe,KAAK,QAAQ,aAAe9K,GAAQ8K,EAAY,WAAW,IAAM9K,GAAQ,KAAK,QAAQ,WAAW,EAC/H,KAAK,MAAK,IACDrC,EAAAM,EAAA,KAAKiT,KAAL,YAAAvT,EAAuB,MAAM,UAAW,WACjDM,EAAA,KAAKiT,GAAiB,WAAW,KAAK,OAAO,CAEjD,CACA,eAAgB,OACT,KAAK,iBACRvT,EAAAM,EAAA,KAAKiT,KAAL,MAAAvT,EAAuB,eAAe,KAE1C,CACA,iBAAiBsL,EAAQ,CACvB3B,EAAA,KAAK2J,GAAAG,IAAL,WACA9J,EAAA,KAAK2J,GAAA5D,IAAL,UAAapE,EACf,CACA,kBAAmB,CACjB,OAAOhL,EAAA,KAAK2L,GACd,CACA,OAAQ,QACNjM,EAAAM,EAAA,KAAKiT,KAAL,MAAAvT,EAAuB,eAAe,MACtCK,EAAA,KAAKkT,EAAmB,QACxB5J,EAAA,KAAK2J,GAAAG,IAAL,WACA9J,EAAA,KAAK2J,GAAA5D,IAAL,UACF,CACA,OAAO8B,EAAWlP,EAAS,OACzB,OAAAjC,EAAA,KAAKmT,GAAiBlR,IACtBtC,EAAAM,EAAA,KAAKiT,KAAL,MAAAvT,EAAuB,eAAe,MACtCK,EAAA,KAAKkT,EAAmBjT,EAAA,KAAK8I,GAAQ,iBAAgB,EAAG,MAAM9I,EAAA,KAAK8I,GAAS,KAAK,OAAO,GACxF9I,EAAA,KAAKiT,GAAiB,YAAY,IAAI,EAC/BjT,EAAA,KAAKiT,GAAiB,QAAQ/B,CAAS,CAChD,CA0DF,EAjHEpI,EAAA,YACA6C,GAAA,YACAsH,EAAA,YACAC,GAAA,YAJqBF,GAAA,YAyDrBG,GAAa,UAAG,OACd,MAAM5J,IAAQ7J,EAAAM,EAAA,KAAKiT,KAAL,YAAAvT,EAAuB,QAASwJ,GAAe,EAC7DnJ,EAAA,KAAK4L,GAAiB,CACpB,GAAGpC,EACH,UAAWA,EAAM,SAAW,UAC5B,UAAWA,EAAM,SAAW,UAC5B,QAASA,EAAM,SAAW,QAC1B,OAAQA,EAAM,SAAW,OACzB,OAAQ,KAAK,OACb,MAAO,KAAK,KAClB,EACE,EACA6F,GAAO,SAACpE,EAAQ,CACd1E,EAAc,MAAM,IAAM,qBACxB,GAAItG,EAAA,KAAKkT,KAAkB,KAAK,aAAY,EAAI,CAC9C,MAAMhC,EAAYlR,EAAA,KAAK2L,IAAe,UAChCyH,EAAiBpT,EAAA,KAAK2L,IAAe,QACrCvB,EAAU,CACd,OAAQpK,EAAA,KAAK8I,GACb,KAAM,KAAK,QAAQ,KACnB,YAAa,KAAK,QAAQ,WACpC,GACYkC,GAAA,YAAAA,EAAQ,QAAS,YACnBtB,GAAAhK,EAAAM,EAAA,KAAKkT,KAAe,YAApB,MAAAxJ,EAAA,KAAAhK,EACEsL,EAAO,KACPkG,EACAkC,EACAhJ,IAEFG,GAAAD,EAAAtK,EAAA,KAAKkT,KAAe,YAApB,MAAA3I,EAAA,KAAAD,EACEU,EAAO,KACP,KACAkG,EACAkC,EACAhJ,KAEOY,GAAA,YAAAA,EAAQ,QAAS,WAC1BR,GAAAC,EAAAzK,EAAA,KAAKkT,KAAe,UAApB,MAAA1I,EAAA,KAAAC,EACEO,EAAO,MACPkG,EACAkC,EACAhJ,IAEFM,GAAAC,EAAA3K,EAAA,KAAKkT,KAAe,YAApB,MAAAxI,EAAA,KAAAC,EACE,OACAK,EAAO,MACPkG,EACAkC,EACAhJ,GAGN,CACA,KAAK,UAAU,QAASjL,GAAa,CACnCA,EAASa,EAAA,KAAK2L,GAAc,CAC9B,CAAC,CACH,CAAC,CACH,EAjHqBjM,SCAnB2T,IAAa3T,GAAA,cAAcR,EAAa,CAC1C,YAAYP,EAAS,GAAI,CACvB,MAAK,EAIPgB,EAAA,KAAA2T,GAHE,KAAK,OAAS3U,EACdoB,EAAA,KAAKuT,EAA2B,IAAI,IACtC,CAEA,MAAM/H,EAAQvJ,EAASuH,EAAO,CAC5B,MAAMjI,EAAWU,EAAQ,SACnBuR,EAAYvR,EAAQ,WAAaR,GAAsBF,EAAUU,CAAO,EAC9E,IAAIlB,EAAQ,KAAK,IAAIyS,CAAS,EAC9B,OAAKzS,IACHA,EAAQ,IAAI2H,GAAM,CAChB,OAAA8C,EACA,SAAAjK,EACA,UAAAiS,EACA,QAAShI,EAAO,oBAAoBvJ,CAAO,EAC3C,MAAAuH,EACA,eAAgBgC,EAAO,iBAAiBjK,CAAQ,CACxD,CAAO,EACD,KAAK,IAAIR,CAAK,GAETA,CACT,CACA,IAAIA,EAAO,CACJd,EAAA,KAAKsT,GAAS,IAAIxS,EAAM,SAAS,IACpCd,EAAA,KAAKsT,GAAS,IAAIxS,EAAM,UAAWA,CAAK,EACxC,KAAK,OAAO,CACV,KAAM,QACN,MAAAA,CACR,CAAO,EAEL,CACA,OAAOA,EAAO,CACZ,MAAM0S,EAAaxT,EAAA,KAAKsT,GAAS,IAAIxS,EAAM,SAAS,EAChD0S,IACF1S,EAAM,QAAO,EACT0S,IAAe1S,GACjBd,EAAA,KAAKsT,GAAS,OAAOxS,EAAM,SAAS,EAEtC,KAAK,OAAO,CAAE,KAAM,UAAW,MAAAA,CAAK,CAAE,EAE1C,CACA,OAAQ,CACNwF,EAAc,MAAM,IAAM,CACxB,KAAK,OAAM,EAAG,QAASxF,GAAU,CAC/B,KAAK,OAAOA,CAAK,CACnB,CAAC,CACH,CAAC,CACH,CACA,IAAIyS,EAAW,CACb,OAAOvT,EAAA,KAAKsT,GAAS,IAAIC,CAAS,CACpC,CACA,QAAS,CACP,MAAO,CAAC,GAAGvT,EAAA,KAAKsT,GAAS,OAAM,CAAE,CACnC,CACA,KAAKpS,EAAS,CACZ,MAAM0R,EAAmB,CAAE,MAAO,GAAM,GAAG1R,CAAO,EAClD,OAAO,KAAK,OAAM,EAAG,KAClBJ,GAAUG,GAAW2R,EAAkB9R,CAAK,CACnD,CACE,CACA,QAAQI,EAAU,GAAI,CACpB,MAAMuS,EAAU,KAAK,OAAM,EAC3B,OAAO,OAAO,KAAKvS,CAAO,EAAE,OAAS,EAAIuS,EAAQ,OAAQ3S,GAAUG,GAAWC,EAASJ,CAAK,CAAC,EAAI2S,CACnG,CACA,OAAOZ,EAAO,CACZvM,EAAc,MAAM,IAAM,CACxB,KAAK,UAAU,QAASnH,GAAa,CACnCA,EAAS0T,CAAK,CAChB,CAAC,CACH,CAAC,CACH,CACA,SAAU,CACRvM,EAAc,MAAM,IAAM,CACxB,KAAK,OAAM,EAAG,QAASxF,GAAU,CAC/BA,EAAM,QAAO,CACf,CAAC,CACH,CAAC,CACH,CACA,UAAW,CACTwF,EAAc,MAAM,IAAM,CACxB,KAAK,OAAM,EAAG,QAASxF,GAAU,CAC/BA,EAAM,SAAQ,CAChB,CAAC,CACH,CAAC,CACH,CACF,EAjFEwS,EAAA,YANe5T,8BCWbgU,IAAchU,GAAA,KAAM,CAStB,YAAYf,EAAS,GAAI,CARzBgB,EAAA,KAAAgU,GACAhU,EAAA,KAAAsR,IACAtR,EAAA,KAAAqJ,IACArJ,EAAA,KAAAiU,IACAjU,EAAA,KAAAkU,IACAlU,EAAA,KAAAmU,IACAnU,EAAA,KAAAoU,IACApU,EAAA,KAAAqU,IAEEjU,EAAA,KAAK4T,EAAchV,EAAO,YAAc,IAAI0U,IAC5CtT,EAAA,KAAKkR,GAAiBtS,EAAO,eAAiB,IAAIoT,IAClDhS,EAAA,KAAKiJ,GAAkBrK,EAAO,gBAAkB,CAAA,GAChDoB,EAAA,KAAK6T,GAAiC,IAAI,KAC1C7T,EAAA,KAAK8T,GAAoC,IAAI,KAC7C9T,EAAA,KAAK+T,GAAc,EACrB,CACA,OAAQ,CACN3B,GAAA,KAAK2B,IAAL,IACI9T,EAAA,KAAK8T,MAAgB,IACzB/T,EAAA,KAAKgU,GAAoB7O,GAAa,UAAU,MAAOF,GAAY,CAC7DA,IACF,MAAM,KAAK,sBAAqB,EAChChF,EAAA,KAAK2T,GAAY,QAAO,EAE5B,CAAC,GACD5T,EAAA,KAAKiU,GAAqBnN,GAAc,UAAU,MAAOD,GAAW,CAC9DA,IACF,MAAM,KAAK,sBAAqB,EAChC5G,EAAA,KAAK2T,GAAY,SAAQ,EAE7B,CAAC,GACH,CACA,SAAU,SACRxB,GAAA,KAAK2B,IAAL,IACI9T,EAAA,KAAK8T,MAAgB,KACzBpU,EAAAM,EAAA,KAAK+T,MAAL,MAAArU,EAAA,WACAK,EAAA,KAAKgU,GAAoB,SACzBrK,EAAA1J,EAAA,KAAKgU,MAAL,MAAAtK,EAAA,WACA3J,EAAA,KAAKiU,GAAqB,QAC5B,CACA,WAAW9S,EAAS,CAClB,OAAOlB,EAAA,KAAK2T,GAAY,QAAQ,CAAE,GAAGzS,EAAS,YAAa,UAAU,CAAE,EAAE,MAC3E,CACA,WAAWA,EAAS,CAClB,OAAOlB,EAAA,KAAKiR,IAAe,QAAQ,CAAE,GAAG/P,EAAS,OAAQ,SAAS,CAAE,EAAE,MACxE,CAQA,aAAaI,EAAU,OACrB,MAAMU,EAAU,KAAK,oBAAoB,CAAE,SAAAV,CAAQ,CAAE,EACrD,OAAO5B,EAAAM,EAAA,KAAK2T,GAAY,IAAI3R,EAAQ,SAAS,IAAtC,YAAAtC,EAAyC,MAAM,IACxD,CACA,gBAAgBsC,EAAS,CACvB,MAAMyL,EAAmB,KAAK,oBAAoBzL,CAAO,EACnDlB,EAAQd,EAAA,KAAK2T,GAAY,MAAM,KAAMlG,CAAgB,EACrDwG,EAAanT,EAAM,MAAM,KAC/B,OAAImT,IAAe,OACV,KAAK,WAAWjS,CAAO,GAE5BA,EAAQ,mBAAqBlB,EAAM,cAAcD,GAAiB4M,EAAiB,UAAW3M,CAAK,CAAC,GACjG,KAAK,cAAc2M,CAAgB,EAEnC,QAAQ,QAAQwG,CAAU,EACnC,CACA,eAAe/S,EAAS,CACtB,OAAOlB,EAAA,KAAK2T,GAAY,QAAQzS,CAAO,EAAE,IAAI,CAAC,CAAE,SAAAI,EAAU,MAAAiI,KAAY,CACpE,MAAM1F,EAAO0F,EAAM,KACnB,MAAO,CAACjI,EAAUuC,CAAI,CACxB,CAAC,CACH,CACA,aAAavC,EAAUhB,EAAS0B,EAAS,CACvC,MAAMyL,EAAmB,KAAK,oBAAoB,CAAE,SAAAnM,CAAQ,CAAE,EACxDR,EAAQd,EAAA,KAAK2T,GAAY,IAC7BlG,EAAiB,SACvB,EACU7J,EAAW9C,GAAA,YAAAA,EAAO,MAAM,KACxB+C,EAAOxD,GAAiBC,EAASsD,CAAQ,EAC/C,GAAIC,IAAS,OAGb,OAAO7D,EAAA,KAAK2T,GAAY,MAAM,KAAMlG,CAAgB,EAAE,QAAQ5J,EAAM,CAAE,GAAG7B,EAAS,OAAQ,EAAI,CAAE,CAClG,CACA,eAAed,EAASZ,EAAS0B,EAAS,CACxC,OAAOsE,EAAc,MACnB,IAAMtG,EAAA,KAAK2T,GAAY,QAAQzS,CAAO,EAAE,IAAI,CAAC,CAAE,SAAAI,KAAe,CAC5DA,EACA,KAAK,aAAaA,EAAUhB,EAAS0B,CAAO,CACpD,CAAO,CACP,CACE,CACA,cAAcV,EAAU,OACtB,MAAMU,EAAU,KAAK,oBAAoB,CAAE,SAAAV,CAAQ,CAAE,EACrD,OAAO5B,EAAAM,EAAA,KAAK2T,GAAY,IACtB3R,EAAQ,SACd,IAFW,YAAAtC,EAEJ,KACL,CACA,cAAcwB,EAAS,CACrB,MAAMgT,EAAalU,EAAA,KAAK2T,GACxBrN,EAAc,MAAM,IAAM,CACxB4N,EAAW,QAAQhT,CAAO,EAAE,QAASJ,GAAU,CAC7CoT,EAAW,OAAOpT,CAAK,CACzB,CAAC,CACH,CAAC,CACH,CACA,aAAaI,EAASc,EAAS,CAC7B,MAAMkS,EAAalU,EAAA,KAAK2T,GACxB,OAAOrN,EAAc,MAAM,KACzB4N,EAAW,QAAQhT,CAAO,EAAE,QAASJ,GAAU,CAC7CA,EAAM,MAAK,CACb,CAAC,EACM,KAAK,eACV,CACE,KAAM,SACN,GAAGI,CACb,EACQc,CACR,EACK,CACH,CACA,cAAcd,EAASsG,EAAgB,GAAI,CACzC,MAAM2M,EAAyB,CAAE,OAAQ,GAAM,GAAG3M,CAAa,EACzD4M,EAAW9N,EAAc,MAC7B,IAAMtG,EAAA,KAAK2T,GAAY,QAAQzS,CAAO,EAAE,IAAKJ,GAAUA,EAAM,OAAOqT,CAAsB,CAAC,CACjG,EACI,OAAO,QAAQ,IAAIC,CAAQ,EAAE,KAAKhU,CAAI,EAAE,MAAMA,CAAI,CACpD,CACA,kBAAkBc,EAASc,EAAU,GAAI,CACvC,OAAOsE,EAAc,MAAM,KACzBtG,EAAA,KAAK2T,GAAY,QAAQzS,CAAO,EAAE,QAASJ,GAAU,CACnDA,EAAM,WAAU,CAClB,CAAC,GACGI,GAAA,YAAAA,EAAS,eAAgB,OACpB,QAAQ,QAAO,EAEjB,KAAK,eACV,CACE,GAAGA,EACH,MAAMA,GAAA,YAAAA,EAAS,eAAeA,GAAA,YAAAA,EAAS,OAAQ,QACzD,EACQc,CACR,EACK,CACH,CACA,eAAed,EAASc,EAAU,GAAI,CACpC,MAAMsC,EAAe,CACnB,GAAGtC,EACH,cAAeA,EAAQ,eAAiB,EAC9C,EACUoS,EAAW9N,EAAc,MAC7B,IAAMtG,EAAA,KAAK2T,GAAY,QAAQzS,CAAO,EAAE,OAAQJ,GAAU,CAACA,EAAM,WAAU,GAAM,CAACA,EAAM,SAAQ,CAAE,EAAE,IAAKA,GAAU,CACjH,IAAI2I,EAAU3I,EAAM,MAAM,OAAQwD,CAAY,EAC9C,OAAKA,EAAa,eAChBmF,EAAUA,EAAQ,MAAMrJ,CAAI,GAEvBU,EAAM,MAAM,cAAgB,SAAW,QAAQ,QAAO,EAAK2I,CACpE,CAAC,CACP,EACI,OAAO,QAAQ,IAAI2K,CAAQ,EAAE,KAAKhU,CAAI,CACxC,CACA,WAAW4B,EAAS,CAClB,MAAMyL,EAAmB,KAAK,oBAAoBzL,CAAO,EACrDyL,EAAiB,QAAU,SAC7BA,EAAiB,MAAQ,IAE3B,MAAM3M,EAAQd,EAAA,KAAK2T,GAAY,MAAM,KAAMlG,CAAgB,EAC3D,OAAO3M,EAAM,cACXD,GAAiB4M,EAAiB,UAAW3M,CAAK,CACxD,EAAQA,EAAM,MAAM2M,CAAgB,EAAI,QAAQ,QAAQ3M,EAAM,MAAM,IAAI,CACtE,CACA,cAAckB,EAAS,CACrB,OAAO,KAAK,WAAWA,CAAO,EAAE,KAAK5B,CAAI,EAAE,MAAMA,CAAI,CACvD,CACA,mBAAmB4B,EAAS,CAC1B,OAAAA,EAAQ,SAAW0N,GAAsB1N,EAAQ,KAAK,EAC/C,KAAK,WAAWA,CAAO,CAChC,CACA,sBAAsBA,EAAS,CAC7B,OAAO,KAAK,mBAAmBA,CAAO,EAAE,KAAK5B,CAAI,EAAE,MAAMA,CAAI,CAC/D,CACA,wBAAwB4B,EAAS,CAC/B,OAAAA,EAAQ,SAAW0N,GAAsB1N,EAAQ,KAAK,EAC/C,KAAK,gBAAgBA,CAAO,CACrC,CACA,uBAAwB,CACtB,OAAI6E,GAAc,WACT7G,EAAA,KAAKiR,IAAe,sBAAqB,EAE3C,QAAQ,QAAO,CACxB,CACA,eAAgB,CACd,OAAOjR,EAAA,KAAK2T,EACd,CACA,kBAAmB,CACjB,OAAO3T,EAAA,KAAKiR,GACd,CACA,mBAAoB,CAClB,OAAOjR,EAAA,KAAKgJ,GACd,CACA,kBAAkBhH,EAAS,CACzBjC,EAAA,KAAKiJ,GAAkBhH,EACzB,CACA,iBAAiBV,EAAUU,EAAS,CAClChC,EAAA,KAAK4T,IAAe,IAAI7R,GAAQT,CAAQ,EAAG,CACzC,SAAAA,EACA,eAAgBU,CACtB,CAAK,CACH,CACA,iBAAiBV,EAAU,CACzB,MAAM+S,EAAW,CAAC,GAAGrU,EAAA,KAAK4T,IAAe,OAAM,CAAE,EAC3CxR,EAAS,CAAA,EACf,OAAAiS,EAAS,QAASC,GAAiB,CAC7B7S,GAAgBH,EAAUgT,EAAa,QAAQ,GACjD,OAAO,OAAOlS,EAAQkS,EAAa,cAAc,CAErD,CAAC,EACMlS,CACT,CACA,oBAAoBN,EAAaE,EAAS,CACxChC,EAAA,KAAK6T,IAAkB,IAAI9R,GAAQD,CAAW,EAAG,CAC/C,YAAAA,EACA,eAAgBE,CACtB,CAAK,CACH,CACA,oBAAoBF,EAAa,CAC/B,MAAMuS,EAAW,CAAC,GAAGrU,EAAA,KAAK6T,IAAkB,OAAM,CAAE,EAC9CzR,EAAS,CAAA,EACf,OAAAiS,EAAS,QAASC,GAAiB,CAC7B7S,GAAgBK,EAAawS,EAAa,WAAW,GACvD,OAAO,OAAOlS,EAAQkS,EAAa,cAAc,CAErD,CAAC,EACMlS,CACT,CACA,oBAAoBJ,EAAS,CAC3B,GAAIA,EAAQ,WACV,OAAOA,EAET,MAAMyL,EAAmB,CACvB,GAAGzN,EAAA,KAAKgJ,IAAgB,QACxB,GAAG,KAAK,iBAAiBhH,EAAQ,QAAQ,EACzC,GAAGA,EACH,WAAY,EAClB,EACI,OAAKyL,EAAiB,YACpBA,EAAiB,UAAYjM,GAC3BiM,EAAiB,SACjBA,CACR,GAEQA,EAAiB,qBAAuB,SAC1CA,EAAiB,mBAAqBA,EAAiB,cAAgB,UAErEA,EAAiB,eAAiB,SACpCA,EAAiB,aAAe,CAAC,CAACA,EAAiB,UAEjD,CAACA,EAAiB,aAAeA,EAAiB,YACpDA,EAAiB,YAAc,gBAE7BA,EAAiB,UAAYrJ,KAC/BqJ,EAAiB,QAAU,IAEtBA,CACT,CACA,uBAAuBzL,EAAS,CAC9B,OAAIA,GAAA,MAAAA,EAAS,WACJA,EAEF,CACL,GAAGhC,EAAA,KAAKgJ,IAAgB,UACxB,IAAGhH,GAAA,YAAAA,EAAS,cAAe,KAAK,oBAAoBA,EAAQ,WAAW,EACvE,GAAGA,EACH,WAAY,EAClB,CACE,CACA,OAAQ,CACNhC,EAAA,KAAK2T,GAAY,MAAK,EACtB3T,EAAA,KAAKiR,IAAe,MAAK,CAC3B,CACF,EA3RE0C,EAAA,YACA1C,GAAA,YACAjI,GAAA,YACA4K,GAAA,YACAC,GAAA,YACAC,GAAA,YACAC,GAAA,YACAC,GAAA,YARgBtU,ICXd6U,GAAqBC,EAAAA,cACvB,MACF,EACIC,GAAkBC,GAAgB,CACpC,MAAMnJ,EAASoJ,EAAAA,WAAiBJ,EAAkB,EAIlD,GAAI,CAAChJ,EACH,MAAM,IAAI,MAAM,wDAAwD,EAE1E,OAAOA,CACT,EACIqJ,GAAsB,CAAC,CACzB,OAAArJ,EACA,SAAAsJ,CACF,KACEC,EAAAA,UAAgB,KACdvJ,EAAO,MAAK,EACL,IAAM,CACXA,EAAO,QAAO,CAChB,GACC,CAACA,CAAM,CAAC,EACYwJ,EAAAA,IAAIR,GAAmB,SAAU,CAAE,MAAOhJ,EAAQ,SAAAsJ,EAAU,GCxBjFG,GAAqBR,EAAAA,cAAoB,EAAK,EAC9CS,GAAiB,IAAMN,EAAAA,WAAiBK,EAAkB,EACpCA,GAAmB,SCD7C,SAASE,IAAc,CACrB,IAAIC,EAAU,GACd,MAAO,CACL,WAAY,IAAM,CAChBA,EAAU,EACZ,EACA,MAAO,IAAM,CACXA,EAAU,EACZ,EACA,QAAS,IACAA,CAEb,CACA,CACA,IAAIC,GAAiCZ,EAAAA,cAAoBU,IAAa,EAClEG,GAA6B,IAAMV,EAAAA,WAAiBS,EAA8B,ECflFE,GAAkC,CAACtT,EAASuT,IAAuB,EACjEvT,EAAQ,UAAYA,EAAQ,cAAgBA,EAAQ,iCACjDuT,EAAmB,YACtBvT,EAAQ,aAAe,IAG7B,EACIwT,GAA8BD,GAAuB,CACvDT,EAAAA,UAAgB,IAAM,CACpBS,EAAmB,WAAU,CAC/B,EAAG,CAACA,CAAkB,CAAC,CACzB,EACIE,GAAc,CAAC,CACjB,OAAArT,EACA,mBAAAmT,EACA,aAAA/Q,EACA,MAAA1D,EACA,SAAA4U,CACF,IACStT,EAAO,SAAW,CAACmT,EAAmB,QAAO,GAAM,CAACnT,EAAO,YAActB,IAAU4U,GAAYtT,EAAO,OAAS,QAAUmC,GAAiBC,EAAc,CAACpC,EAAO,MAAOtB,CAAK,CAAC,GCtBlL6U,GAAwBlI,GAAqB,CAC/C,GAAIA,EAAiB,SAAU,CAE7B,MAAMmI,EAASnV,GAAUA,IAAU,SAAWA,EAAQ,KAAK,IAAIA,GAAS,IAAsB,GAAoB,EAC5GoV,EAAoBpI,EAAiB,UAC3CA,EAAiB,UAAY,OAAOoI,GAAsB,WAAa,IAAIzP,IAASwP,EAAMC,EAAkB,GAAGzP,CAAI,CAAC,EAAIwP,EAAMC,CAAiB,EAC3I,OAAOpI,EAAiB,QAAW,WACrCA,EAAiB,OAAS,KAAK,IAC7BA,EAAiB,OACjB,GACR,EAEE,CACF,EACIqI,GAAY,CAAC1T,EAAQ2T,IAAgB3T,EAAO,WAAaA,EAAO,YAAc,CAAC2T,EAC/EC,GAAgB,CAACvI,EAAkBrL,KAAWqL,GAAA,YAAAA,EAAkB,WAAYrL,EAAO,UACnF6T,GAAkB,CAACxI,EAAkB9D,EAAU4L,IAAuB5L,EAAS,gBAAgB8D,CAAgB,EAAE,MAAM,IAAM,CAC/H8H,EAAmB,WAAU,CAC/B,CAAC,ECDD,SAASW,GAAalU,EAASmU,EAAUzB,EAAa,eAQpD,MAAMqB,EAAcd,GAAA,EACdM,EAAqBF,GAAA,EACrB9J,EAASkJ,GAA0B,EACnChH,EAAmBlC,EAAO,oBAAoBvJ,CAAO,GAC3D0H,GAAAhK,EAAA6L,EAAO,oBAAoB,UAA3B,YAAA7L,EAAoC,4BAApC,MAAAgK,EAAA,KAAAhK,EACE+N,GASFA,EAAiB,mBAAqBsI,EAAc,cAAgB,aACpEJ,GAAqBlI,CAAgB,EACrC6H,GAAgC7H,EAAkB8H,CAAkB,EACpEC,GAA2BD,CAAkB,EAC7C,MAAMa,EAAkB,CAAC7K,EAAO,gBAAgB,IAAIkC,EAAiB,SAAS,EACxE,CAAC9D,CAAQ,EAAI0M,EAAAA,SACjB,IAAM,IAAIF,EACR5K,EACAkC,CAAA,CACF,EAEIrL,EAASuH,EAAS,oBAAoB8D,CAAgB,EACtD6I,EAAkB,CAACP,GAAe/T,EAAQ,aAAe,GAgB/D,GAfAuU,EAAAA,qBACEC,EAAAA,YACGC,GAAkB,CACjB,MAAMC,EAAcJ,EAAkB3M,EAAS,UAAUrD,EAAc,WAAWmQ,CAAa,CAAC,EAAIrW,EACpG,OAAAuJ,EAAS,aAAA,EACF+M,CACT,EACA,CAAC/M,EAAU2M,CAAe,CAAA,EAE5B,IAAM3M,EAAS,iBAAA,EACf,IAAMA,EAAS,iBAAA,CAAiB,EAElCmL,EAAAA,UAAgB,IAAM,CACpBnL,EAAS,WAAW8D,CAAgB,CACtC,EAAG,CAACA,EAAkB9D,CAAQ,CAAC,EAC3BqM,GAAcvI,EAAkBrL,CAAM,EACxC,MAAM6T,GAAgBxI,EAAkB9D,EAAU4L,CAAkB,EAEtE,GAAIE,GAAY,CACd,OAAArT,EACA,mBAAAmT,EACA,aAAc9H,EAAiB,aAC/B,MAAOlC,EAAO,cAAA,EAAgB,IAAIkC,EAAiB,SAAS,EAC5D,SAAUA,EAAiB,QAAA,CAC5B,EACC,MAAMrL,EAAO,MAOf,IAJAmI,GAAAD,EAAAiB,EAAO,oBAAoB,UAA3B,YAAAjB,EAAoC,2BAApC,MAAAC,EAAA,KAAAD,EACEmD,EACArL,GAEEqL,EAAiB,+BAAiC,CAACtN,IAAY2V,GAAU1T,EAAQ2T,CAAW,EAAG,CACjG,MAAMtM,EAAU2M,EAEdH,GAAgBxI,EAAkB9D,EAAU4L,CAAkB,GAG9D9K,EAAAc,EAAO,cAAA,EAAgB,IAAIkC,EAAiB,SAAS,IAArD,YAAAhD,EAAwD,QAE1DhB,GAAA,MAAAA,EAAS,MAAMrJ,GAAM,QAAQ,IAAM,CACjCuJ,EAAS,aAAA,CACX,EACF,CACA,OAAQ8D,EAAiB,oBAAqDrL,EAA/BuH,EAAS,YAAYvH,CAAM,CAC5E,CC9FA,SAASuU,GAAS3U,EAAS0S,EAAa,CACtC,OAAOwB,GAAalU,EAASsJ,EAA0B,CACzD,CCIA,SAASsL,GAAY5U,EAAS0S,EAAa,CACzC,MAAMnJ,EAASkJ,GAA0B,EACnC,CAAC9K,CAAQ,EAAI0M,EAAAA,SACjB,IAAM,IAAItD,GACRxH,EACAvJ,CACN,CACA,EACE8S,EAAAA,UAAgB,IAAM,CACpBnL,EAAS,WAAW3H,CAAO,CAC7B,EAAG,CAAC2H,EAAU3H,CAAO,CAAC,EACtB,MAAMI,EAASmU,EAAAA,qBACbC,EAAAA,YACGC,GAAkB9M,EAAS,UAAUrD,EAAc,WAAWmQ,CAAa,CAAC,EAC7E,CAAC9M,CAAQ,CACf,EACI,IAAMA,EAAS,iBAAgB,EAC/B,IAAMA,EAAS,iBAAgB,CACnC,EACQkN,EAASL,EAAAA,YACb,CAACtF,EAAW4F,IAAkB,CAC5BnN,EAAS,OAAOuH,EAAW4F,CAAa,EAAE,MAAM1W,CAAI,CACtD,EACA,CAACuJ,CAAQ,CACb,EACE,GAAIvH,EAAO,OAASmC,GAAiBoF,EAAS,QAAQ,aAAc,CAACvH,EAAO,KAAK,CAAC,EAChF,MAAMA,EAAO,MAEf,MAAO,CAAE,GAAGA,EAAQ,OAAAyU,EAAQ,YAAazU,EAAO,MAAM,CACxD,CC/BA,MAAMsS,GAAc,IAAIhB,GAAY,CAClC,eAAgB,CACd,QAAS,CACP,qBAAsB,GACtB,MAAO,EACP,UAAW,IAAO,GAAK,EACvB,OAAQ,IAAO,GAAK,EAAA,EAEtB,UAAW,CACT,MAAO,CAAA,CACT,CAEJ,CAAC,EASM,SAASqD,GAAc,CAAE,SAAAlC,GAAmD,CACjF,OACEE,EAAAA,IAACH,GAAA,CAAoB,OAAQF,GAC1B,SAAAG,CAAA,CACH,CAEJ,CClBO,MAAMmC,WAAsBC,EAAAA,SAAwB,CACzD,YAAYC,EAAc,CACxB,MAAMA,CAAK,EACX,KAAK,MAAQ,CACX,SAAU,GACV,MAAO,IAAA,CAEX,CAEA,OAAO,yBAAyBzP,EAAqB,CACnD,MAAO,CACL,SAAU,GACV,MAAAA,CAAA,CAEJ,CAEA,kBAAkBA,EAAc0P,EAAkC,SAEhE,QAAQ,MAAM,gCAAiC1P,EAAO0P,CAAS,GAG/DzN,GAAAhK,EAAA,KAAK,OAAM,UAAX,MAAAgK,EAAA,KAAAhK,EAAqB+H,EAAO0P,EAC9B,CAEA,QAAoB,OAClB,OAAI,KAAK,MAAM,SAET,KAAK,MAAM,SACN,KAAK,MAAM,eAKjB,MAAA,CAAI,UAAU,wFACb,SAAAC,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAArC,EAAAA,IAAC,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAU,uBACV,QAAQ,YACR,KAAK,eACL,cAAY,OAEZ,SAAAA,EAAAA,IAAC,OAAA,CACC,SAAS,UACT,EAAE,gNACF,SAAS,SAAA,CAAA,CACX,CAAA,EAEJ,EACAqC,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAArC,EAAAA,IAAC,KAAA,CAAG,UAAU,qDAAqD,SAAA,uBAEnE,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,8CACb,SAAAA,EAAAA,IAAC,IAAA,CACE,WAAArV,EAAA,KAAK,MAAM,QAAX,YAAAA,EAAkB,UAAW,8BAAA,CAChC,EACF,EACAqV,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM,CACb,KAAK,SAAS,CAAE,SAAU,GAAO,MAAO,KAAM,EAC9C,OAAO,SAAS,OAAA,CAClB,EACA,UAAU,qSACX,SAAA,aAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAIG,KAAK,MAAM,QACpB,CACF,CCtFO,SAASsC,GACd/V,EACA2I,EACAjI,EACA,CACA,OAAO2U,GAAS,CACd,SAAArV,EACA,QAAA2I,EACA,GAAGjI,CAAA,CAC6E,CACpF,CAKO,SAASsV,GACdC,EACAvV,EACA,CACA,MAAM0S,EAAcD,GAAA,EAEd+C,EAAkB,CACtB,WAAAD,EACA,GAAGvV,EACH,QAAS,CAACyF,EAAiByJ,EAAuB9G,EAAkBqN,IAAuB,CACzF,QAAQ,MAAM,0BAA2BhQ,CAAK,EAC1CzF,GAAA,MAAAA,EAAS,SAEXA,EAAQ,QAAQyF,EAAOyJ,EAAW9G,CAAO,CAE7C,EACA,UAAW,CAACvG,EAA0BqN,EAAuB9G,EAAkBqN,IAAuB,CAEpG/C,EAAY,kBAAkB,CAAE,SAAU,CAAA,EAAI,EAC1C1S,GAAA,MAAAA,EAAS,WAEXA,EAAQ,UAAU6B,EAAMqN,EAAW9G,CAAO,CAE9C,CAAA,EAGF,OAAOwM,GAAYY,CAAwF,CAC7G,CC1CA,SAASE,IAA8B,CACrC,MAAMC,EAAO,SAAS,cAAc,yBAAyB,EAC7D,OAAOA,GAAA,YAAAA,EAAM,aAAa,aAAc,IAC1C,CAKA,eAAeC,GAAWC,EAAuC,CAC/D,IAAIpQ,EAEJ,GAAI,CACF,MAAM5D,EAAO,MAAMgU,EAAS,KAAA,EACxBhU,EAAK,MACP4D,EAAQ5D,EAGR4D,EAAQ,CACN,MAAO,CACL,KAAM,gBACN,QAAS5D,EAAK,SAAW,iBAAiBgU,EAAS,MAAM,GACzD,QAAShU,CAAA,CACX,CAGN,MAAQ,CAEN4D,EAAQ,CACN,MAAO,CACL,KAAM,cACN,QAAS,iBAAiBoQ,EAAS,MAAM,IAAIA,EAAS,UAAU,GAChE,QAAS,CAAA,CAAC,CACZ,CAEJ,CAEA,OAAOpQ,CACT,CAgBA,eAAsBqQ,GACpBC,EACA/V,EAA6B,GACJ,CACzB,KAAM,CAAE,OAAAyC,EAAQ,SAAAuT,EAAW,GAAO,GAAG1T,GAAiBtC,EAGtD,IAAIiW,EAAWF,EACf,GAAItT,EAAQ,CACV,MAAMyT,EAAe,IAAI,gBACzB,OAAO,QAAQzT,CAAM,EAAE,QAAQ,CAAC,CAAC5F,EAAK4B,CAAK,IAAM,CAC3CA,GAAS,MAAQA,IAAU,IAC7ByX,EAAa,OAAOrZ,EAAK,OAAO4B,CAAK,CAAC,CAE1C,CAAC,EACD,MAAM0X,EAAcD,EAAa,SAAA,EAC7BC,IACFF,EAAW,GAAGF,CAAG,GAAGA,EAAI,SAAS,GAAG,EAAI,IAAM,GAAG,GAAGI,CAAW,GAEnE,CAGA,MAAMC,EAAYJ,EAAW,KAAON,GAAA,EAG9BW,EAAU,IAAI,QAAQ/T,EAAa,OAAO,EAG5C,CAAC+T,EAAQ,IAAI,cAAc,IAAM/T,EAAa,SAAW,QAAUA,EAAa,SAAW,SAAWA,EAAa,SAAW,QAChI+T,EAAQ,IAAI,eAAgB,kBAAkB,EAI3CA,EAAQ,IAAI,QAAQ,GACvBA,EAAQ,IAAI,SAAU,kBAAkB,EAItCD,IAAc9T,EAAa,SAAW,QAAUA,EAAa,SAAW,SAAWA,EAAa,SAAW,OAASA,EAAa,SAAW,WAC9I+T,EAAQ,IAAI,eAAgBD,CAAS,EAIvC,MAAME,EAA2B,CAC/B,GAAGhU,EACH,QAAA+T,EACA,YAAa,aAAA,EAITR,EAAW,MAAM,MAAMI,EAAUK,CAAW,EAGlD,GAAI,CAACT,EAAS,GAEZ,MADc,MAAMD,GAAWC,CAAQ,EAKzC,MAAMhU,EAAO,MAAMgU,EAAS,KAAA,EAG5B,MAAI,CAAChU,EAAK,MAAQ,CAACA,EAAK,MAEf,CACL,KAAAA,EACA,KAAM,CACJ,UAAW,IAAI,KAAA,EAAO,YAAA,EACtB,QAAS,IAAA,CACX,EAIGA,CACT,CAKA,eAAsB0U,GAAUR,EAAatT,EAA+D,CAC1G,OAAOqT,GAAcC,EAAK,CAAE,OAAQ,MAAO,OAAAtT,EAAQ,CACrD,CAKA,eAAsB+T,GAAWT,EAAaU,EAAgBhU,EAA+D,CAC3H,OAAOqT,GAAcC,EAAK,CACxB,OAAQ,OACR,KAAMU,EAAO,KAAK,UAAUA,CAAI,EAAI,OACpC,OAAAhU,CAAA,CACD,CACH,CAKA,eAAsBiU,GAAYX,EAAaU,EAAgBhU,EAA+D,CAC5H,OAAOqT,GAAcC,EAAK,CACxB,OAAQ,QACR,KAAMU,EAAO,KAAK,UAAUA,CAAI,EAAI,OACpC,OAAAhU,CAAA,CACD,CACH,CAgBA,eAAsBkU,GAAaZ,EAAatT,EAA+D,CAC7G,OAAOqT,GAAcC,EAAK,CAAE,OAAQ,SAAU,OAAAtT,EAAQ,CACxD,CCnLO,MAAMmU,EAAW,UAEXC,GAAY,CAEvB,aAAc,CACZ,MAAO,IAAM,GAAGD,CAAQ,gBACxB,KAAOE,GAAe,GAAGF,CAAQ,iBAAiBE,CAAE,GACpD,OAAQ,IAAM,GAAGF,CAAQ,gBACzB,OAASE,GAAe,GAAGF,CAAQ,iBAAiBE,CAAE,GACtD,QAAUA,GAAe,GAAGF,CAAQ,iBAAiBE,CAAE,GACvD,OAAQ,IAAM,GAAGF,CAAQ,uBACzB,MAAO,CAACG,EAAcC,IAAkB,GAAGJ,CAAQ,iBAAiBG,CAAI,IAAIC,CAAK,EAAA,EAInF,sBAAuB,CACrB,MAAO,IAAM,GAAGJ,CAAQ,0BACxB,KAAOE,GAAe,GAAGF,CAAQ,2BAA2BE,CAAE,GAC9D,OAAQ,IAAM,GAAGF,CAAQ,0BACzB,OAASE,GAAe,GAAGF,CAAQ,2BAA2BE,CAAE,GAChE,QAAUA,GAAe,GAAGF,CAAQ,2BAA2BE,CAAE,GACjE,aAAeA,GAAe,GAAGF,CAAQ,2BAA2BE,CAAE,gBAAA,EAIxE,QAAS,CACP,MAAO,IAAM,GAAGF,CAAQ,WACxB,KAAOE,GAAe,GAAGF,CAAQ,YAAYE,CAAE,GAC/C,OAAQ,IAAM,GAAGF,CAAQ,WACzB,OAASE,GAAe,GAAGF,CAAQ,YAAYE,CAAE,GACjD,QAAUA,GAAe,GAAGF,CAAQ,YAAYE,CAAE,EAAA,EAcpD,OAAQ,CACN,KAAM,IAAM,GAAGF,CAAQ,cAAA,EAIzB,SAAU,CACR,KAAM,IAAM,GAAGA,CAAQ,gBAAA,CAE3B","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}