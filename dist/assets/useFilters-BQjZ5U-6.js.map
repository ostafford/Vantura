{"version":3,"file":"useFilters-BQjZ5U-6.js","sources":["../../app/javascript/api/resources/filters.ts","../../app/javascript/hooks/useFilters.ts"],"sourcesContent":["/**\n * Typed API functions for filters resource\n */\n\nimport { apiGet, apiPost, apiPatch, apiDelete } from '../client'\nimport { endpoints } from '../endpoints'\nimport type { Filter } from '../../types/models'\nimport type { ApiResponse } from '../../types/api'\n\nexport interface FilterCreateParams {\n  filter: {\n    name: string\n    filter_types: string[]\n    filter_params?: Record<string, unknown>\n    date_range?: {\n      start_date: string | null\n      end_date: string | null\n    } | null\n  }\n}\n\nexport interface FilterUpdateParams {\n  filter: {\n    name?: string\n    filter_types?: string[]\n    filter_params?: Record<string, unknown>\n    date_range?: {\n      start_date: string | null\n      end_date: string | null\n    } | null\n  }\n}\n\n/**\n * Get list of filters\n */\nexport async function getFilters(): Promise<ApiResponse<Filter[]>> {\n  return apiGet<Filter[]>(endpoints.filters.index())\n}\n\n/**\n * Get a single filter by ID\n * @param id - Filter ID\n */\nexport async function getFilter(id: number): Promise<ApiResponse<Filter>> {\n  return apiGet<Filter>(endpoints.filters.show(id))\n}\n\n/**\n * Create a new filter\n * @param params - Filter data\n */\nexport async function createFilter(params: FilterCreateParams): Promise<ApiResponse<Filter>> {\n  return apiPost<Filter>(endpoints.filters.create(), params)\n}\n\n/**\n * Update an existing filter\n * @param id - Filter ID\n * @param params - Updated filter data\n */\nexport async function updateFilter(\n  id: number,\n  params: FilterUpdateParams\n): Promise<ApiResponse<Filter>> {\n  return apiPatch<Filter>(endpoints.filters.update(id), params)\n}\n\n/**\n * Delete a filter\n * @param id - Filter ID\n */\nexport async function deleteFilter(id: number): Promise<ApiResponse<{ message: string }>> {\n  return apiDelete<{ message: string }>(endpoints.filters.destroy(id))\n}\n\n","/**\n * React Query hooks for filters\n */\n\nimport { useApiQuery, useApiMutation } from './useApi'\nimport { getFilters, getFilter, createFilter, updateFilter, deleteFilter } from '../api/resources/filters'\nimport type { Filter } from '../types/models'\nimport type { FilterCreateParams, FilterUpdateParams } from '../api/resources/filters'\n\n/**\n * Fetch all filters\n */\nexport function useFilters() {\n  return useApiQuery<Filter[]>(\n    ['filters'],\n    () => getFilters(),\n    {\n      staleTime: 1000 * 60 * 5 // 5 minutes\n    }\n  )\n}\n\n/**\n * Fetch a single filter by ID\n */\nexport function useFilter(id: number | null) {\n  return useApiQuery<Filter>(\n    ['filters', id],\n    () => {\n      if (!id) throw new Error('Filter ID is required')\n      return getFilter(id)\n    },\n    {\n      enabled: !!id,\n      staleTime: 1000 * 60 * 5\n    }\n  )\n}\n\n/**\n * Create a new filter\n */\nexport function useCreateFilter() {\n  return useApiMutation<Filter, FilterCreateParams>(\n    (params) => createFilter(params),\n    {\n      onSuccess: () => {\n        // Invalidates filters list\n      }\n    }\n  )\n}\n\n/**\n * Update an existing filter\n */\nexport function useUpdateFilter() {\n  return useApiMutation<Filter, { id: number; params: FilterUpdateParams }>(\n    ({ id, params }) => updateFilter(id, params),\n    {\n      onSuccess: () => {\n        // Invalidates filters list\n      }\n    }\n  )\n}\n\n/**\n * Delete a filter\n */\nexport function useDeleteFilter() {\n  return useApiMutation<{ message: string }, number>(\n    (id) => deleteFilter(id),\n    {\n      onSuccess: () => {\n        // Invalidates filters list\n      }\n    }\n  )\n}\n\n"],"names":["createFilter","params","apiPost","endpoints","updateFilter","id","apiPatch","deleteFilter","apiDelete","useCreateFilter","useApiMutation","useUpdateFilter","useDeleteFilter"],"mappings":"wEAoDA,eAAsBA,EAAaC,EAA0D,CAC3F,OAAOC,EAAgBC,EAAU,QAAQ,OAAA,EAAUF,CAAM,CAC3D,CAOA,eAAsBG,EACpBC,EACAJ,EAC8B,CAC9B,OAAOK,EAAiBH,EAAU,QAAQ,OAAOE,CAAE,EAAGJ,CAAM,CAC9D,CAMA,eAAsBM,EAAaF,EAAuD,CACxF,OAAOG,EAA+BL,EAAU,QAAQ,QAAQE,CAAE,CAAC,CACrE,CChCO,SAASI,GAAkB,CAChC,OAAOC,EACJT,GAAWD,EAAaC,CAAM,EAC/B,CACE,UAAW,IAAM,CAEjB,CAAA,CACF,CAEJ,CAKO,SAASU,GAAkB,CAChC,OAAOD,EACL,CAAC,CAAE,GAAAL,EAAI,OAAAJ,KAAaG,EAAaC,EAAIJ,CAAM,EAC3C,CACE,UAAW,IAAM,CAEjB,CAAA,CACF,CAEJ,CAKO,SAASW,GAAkB,CAChC,OAAOF,EACJL,GAAOE,EAAaF,CAAE,EACvB,CACE,UAAW,IAAM,CAEjB,CAAA,CACF,CAEJ"}