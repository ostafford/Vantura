{"version":3,"file":"recurring-C8Szns6G.js","sources":["../../app/javascript/api/resources/recurring.ts"],"sourcesContent":["/**\n * Typed API functions for recurring transactions resource\n */\n\nimport { apiGet, apiPost, apiPatch, apiDelete } from '../client'\nimport { endpoints } from '../endpoints'\nimport type { RecurringTransaction } from '../../types/models'\nimport type { ApiResponse } from '../../types/api'\n\nexport interface RecurringTransactionListResponse {\n  recurring_transactions: RecurringTransaction[]\n  breakdowns: {\n    week_income: number\n    week_expenses: number\n    month_income: number\n    month_expenses: number\n    next_occurrence_date: string | null\n    next_occurrence_amount: number | null\n    next_occurrence_desc: string | null\n  }\n}\n\nexport interface RecurringTransactionCreateParams {\n  transaction_id?: number\n  recurring_transaction?: {\n    description: string\n    amount: number\n    frequency: 'weekly' | 'fortnightly' | 'monthly' | 'quarterly' | 'yearly'\n    next_occurrence_date: string\n    transaction_type: 'income' | 'expense'\n    category?: string | null\n    merchant_pattern?: string | null\n    amount_tolerance?: number\n    projection_months?: string\n    is_active?: boolean\n  }\n  amount_tolerance?: number\n  frequency?: 'weekly' | 'fortnightly' | 'monthly' | 'quarterly' | 'yearly'\n  next_occurrence_date?: string\n  projection_months?: string\n}\n\nexport interface RecurringTransactionUpdateParams {\n  recurring_transaction: {\n    description?: string\n    amount?: number\n    frequency?: 'weekly' | 'fortnightly' | 'monthly' | 'quarterly' | 'yearly'\n    next_occurrence_date?: string\n    transaction_type?: 'income' | 'expense'\n    category?: string | null\n    merchant_pattern?: string | null\n    amount_tolerance?: number\n    projection_months?: string\n    is_active?: boolean\n  }\n}\n\n/**\n * Get list of recurring transactions\n */\nexport async function getRecurringTransactions(): Promise<ApiResponse<RecurringTransactionListResponse>> {\n  return apiGet<RecurringTransactionListResponse>(endpoints.recurringTransactions.index())\n}\n\n/**\n * Get a single recurring transaction by ID\n * @param id - Recurring transaction ID\n */\nexport async function getRecurringTransaction(id: number): Promise<ApiResponse<RecurringTransaction>> {\n  return apiGet<RecurringTransaction>(endpoints.recurringTransactions.show(id))\n}\n\n/**\n * Create a new recurring transaction\n * @param params - Recurring transaction data\n */\nexport async function createRecurringTransaction(\n  params: RecurringTransactionCreateParams\n): Promise<ApiResponse<RecurringTransaction>> {\n  return apiPost<RecurringTransaction>(endpoints.recurringTransactions.create(), params)\n}\n\n/**\n * Update an existing recurring transaction\n * @param id - Recurring transaction ID\n * @param params - Updated recurring transaction data\n */\nexport async function updateRecurringTransaction(\n  id: number,\n  params: RecurringTransactionUpdateParams\n): Promise<ApiResponse<RecurringTransaction>> {\n  return apiPatch<RecurringTransaction>(endpoints.recurringTransactions.update(id), params)\n}\n\n/**\n * Delete a recurring transaction\n * @param id - Recurring transaction ID\n */\nexport async function deleteRecurringTransaction(\n  id: number\n): Promise<ApiResponse<{ message: string }>> {\n  return apiDelete<{ message: string }>(endpoints.recurringTransactions.destroy(id))\n}\n\n/**\n * Toggle active status of a recurring transaction\n * @param id - Recurring transaction ID\n */\nexport async function toggleRecurringTransactionActive(\n  id: number\n): Promise<ApiResponse<{ recurring_transaction: RecurringTransaction; message: string }>> {\n  return apiPost<{ recurring_transaction: RecurringTransaction; message: string }>(\n    endpoints.recurringTransactions.toggleActive(id)\n  )\n}\n\n"],"names":["getRecurringTransactions","apiGet","endpoints","createRecurringTransaction","params","apiPost","deleteRecurringTransaction","id","apiDelete","toggleRecurringTransactionActive"],"mappings":"iEA4DA,eAAsBA,GAAmF,CACvG,OAAOC,EAAyCC,EAAU,sBAAsB,MAAA,CAAO,CACzF,CAcA,eAAsBC,EACpBC,EAC4C,CAC5C,OAAOC,EAA8BH,EAAU,sBAAsB,OAAA,EAAUE,CAAM,CACvF,CAkBA,eAAsBE,EACpBC,EAC2C,CAC3C,OAAOC,EAA+BN,EAAU,sBAAsB,QAAQK,CAAE,CAAC,CACnF,CAMA,eAAsBE,EACpBF,EACwF,CACxF,OAAOF,EACLH,EAAU,sBAAsB,aAAaK,CAAE,CAAA,CAEnD"}