{"version":3,"file":"RecurringTransactionTable-DX-UNrgR.js","sources":["../../app/javascript/hooks/useRecurringTransactions.ts","../../app/javascript/components/tables/RecurringTransactionTable.tsx"],"sourcesContent":["/**\n * React Query hook for recurring transactions data\n */\n\nimport { useApiQuery, useApiMutation } from './useApi'\nimport { getRecurringTransactions, toggleRecurringTransactionActive, deleteRecurringTransaction } from '../api/resources/recurring'\nimport type { RecurringTransactionListResponse } from '../api/resources/recurring'\nimport type { RecurringTransaction } from '../types/models'\n\n/**\n * Fetch recurring transactions with React Query\n */\nexport function useRecurringTransactions() {\n  return useApiQuery<RecurringTransactionListResponse>(\n    ['recurring-transactions'],\n    () => getRecurringTransactions(),\n    {\n      staleTime: 1000 * 60 * 5 // 5 minutes\n    }\n  )\n}\n\n/**\n * Toggle active status of a recurring transaction\n */\nexport function useToggleRecurringActive() {\n  return useApiMutation<{ recurring_transaction: RecurringTransaction; message: string }, number>(\n    (id: number) => toggleRecurringTransactionActive(id),\n    {\n      onSuccess: () => {\n        // Query will refetch automatically\n      }\n    }\n  )\n}\n\n/**\n * Delete a recurring transaction\n */\nexport function useDeleteRecurringTransaction() {\n  return useApiMutation<{ message: string }, number>(\n    (id: number) => deleteRecurringTransaction(id),\n    {\n      onSuccess: () => {\n        // Query will refetch automatically\n      }\n    }\n  )\n}\n\n","/**\n * Recurring Transaction Table Component\n * Displays recurring transactions in a sortable table (desktop) or card layout (mobile)\n */\n\nimport React, { useState, useMemo } from 'react'\nimport { QueryProvider } from '../../providers/QueryProvider'\nimport { ErrorBoundary } from '../shared/ErrorBoundary'\nimport { useRecurringTransactions, useToggleRecurringActive, useDeleteRecurringTransaction } from '../../hooks/useRecurringTransactions'\nimport { useResponsive } from '../../hooks/useResponsive'\n\ninterface RecurringTransactionTableProps {\n  // Props can be passed from ERB view if needed\n}\n\ntype SortColumn = 'description' | 'amount' | 'frequency' | 'next_occurrence' | 'status'\ntype SortDirection = 'asc' | 'desc'\n\nfunction RecurringTransactionTableContent({}: RecurringTransactionTableProps): React.JSX.Element {\n  const { data, isLoading, error } = useRecurringTransactions()\n  const toggleActive = useToggleRecurringActive()\n  const deleteRecurring = useDeleteRecurringTransaction()\n  const [sortColumn, setSortColumn] = useState<SortColumn>('next_occurrence')\n  const [sortDirection, setSortDirection] = useState<SortDirection>('asc')\n  const { isMobile } = useResponsive()\n\n  const recurringTransactions = data?.data?.recurring_transactions || []\n\n  // Sort transactions client-side\n  const sortedTransactions = useMemo(() => {\n    const sorted = [...recurringTransactions].sort((a, b) => {\n      let aVal: string | number | boolean\n      let bVal: string | number | boolean\n\n      switch (sortColumn) {\n        case 'description':\n          aVal = a.description.toLowerCase()\n          bVal = b.description.toLowerCase()\n          break\n        case 'amount':\n          aVal = a.amount\n          bVal = b.amount\n          break\n        case 'frequency':\n          aVal = a.frequency\n          bVal = b.frequency\n          break\n        case 'next_occurrence':\n          aVal = new Date(a.next_occurrence_date).getTime()\n          bVal = new Date(b.next_occurrence_date).getTime()\n          break\n        case 'status':\n          aVal = a.is_active\n          bVal = b.is_active\n          break\n        default:\n          return 0\n      }\n\n      if (aVal < bVal) return sortDirection === 'asc' ? -1 : 1\n      if (aVal > bVal) return sortDirection === 'asc' ? 1 : -1\n      return 0\n    })\n    return sorted\n  }, [recurringTransactions, sortColumn, sortDirection])\n\n  const handleSort = (column: SortColumn) => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')\n    } else {\n      setSortColumn(column)\n      setSortDirection('asc')\n    }\n  }\n\n  const handleToggleActive = async (id: number) => {\n    try {\n      await toggleActive.mutateAsync(id)\n    } catch (error) {\n      console.error('Failed to toggle active status:', error)\n    }\n  }\n\n  const handleDelete = async (id: number) => {\n    if (!confirm('Delete this recurring pattern? All future projected transactions will be removed.')) {\n      return\n    }\n    try {\n      await deleteRecurring.mutateAsync(id)\n    } catch (error) {\n      console.error('Failed to delete recurring transaction:', error)\n    }\n  }\n\n  const formatAmount = (amount: number): string => {\n    const sign = amount < 0 ? '-' : '+'\n    return `${sign}$${Math.abs(amount).toFixed(2)}`\n  }\n\n  const formatFrequency = (frequency: string): string => {\n    return frequency.charAt(0).toUpperCase() + frequency.slice(1)\n  }\n\n  const SortIcon = ({ column }: { column: SortColumn }): React.JSX.Element | null => {\n    if (sortColumn !== column) return null\n    return (\n      <svg\n        className={`w-4 h-4 ml-1 ${sortDirection === 'asc' ? '' : 'transform rotate-180'}`}\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 15l7-7 7 7\" />\n      </svg>\n    )\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"px-6 py-12 text-center\">\n        <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\n        <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">Loading recurring transactions...</p>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"px-6 py-12 text-center\">\n        <p className=\"text-sm text-red-600 dark:text-red-400\">Error loading recurring transactions</p>\n      </div>\n    )\n  }\n\n  if (sortedTransactions.length === 0) {\n    return (\n      <div className=\"px-6 py-12 text-center\">\n        <svg className=\"mx-auto h-12 w-12 text-gray-400 dark:text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\n        </svg>\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">No recurring patterns</h3>\n        <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">Mark transactions as recurring to see them here.</p>\n      </div>\n    )\n  }\n\n  // Mobile card layout\n  if (isMobile) {\n    return (\n      <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n        {sortedTransactions.map((recurring) => (\n          <div\n            key={recurring.id}\n            className={`p-4 ${\n              !recurring.is_active ? 'bg-gray-100 dark:bg-gray-700 opacity-60' : ''\n            } hover:bg-gray-50 dark:hover:bg-gray-700`}\n          >\n            <div className=\"flex items-start justify-between mb-2\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {recurring.description}\n                </p>\n                {recurring.merchant_pattern && (\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    Pattern: &quot;{recurring.merchant_pattern}&quot; (Â±${recurring.amount_tolerance || 0})\n                  </p>\n                )}\n              </div>\n              <span\n                className={`text-sm font-medium ${\n                  recurring.amount < 0\n                    ? 'text-red-600 dark:text-red-400'\n                    : 'text-green-600 dark:text-green-400'\n                }`}\n              >\n                {formatAmount(recurring.amount)}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-between mt-3\">\n              <div className=\"flex items-center gap-2 flex-wrap\">\n                <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {formatFrequency(recurring.frequency)}\n                </span>\n                <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  Next: {new Date(recurring.next_occurrence_date).toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric',\n                    year: 'numeric'\n                  })}\n                </span>\n                {recurring.is_active ? (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                    Active\n                  </span>\n                ) : (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-600\">\n                    Paused\n                  </span>\n                )}\n              </div>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={() => handleToggleActive(recurring.id)}\n                  disabled={toggleActive.isPending}\n                  className=\"inline-flex items-center px-3 py-1 bg-yellow-100 text-yellow-700 rounded-lg hover:bg-yellow-200 hover:shadow-md transition-all text-xs font-medium disabled:opacity-50\"\n                >\n                  {recurring.is_active ? 'Pause' : 'Resume'}\n                </button>\n                <button\n                  onClick={() => handleDelete(recurring.id)}\n                  disabled={deleteRecurring.isPending}\n                  className=\"inline-flex items-center px-3 py-1 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 hover:shadow-md transition-all text-xs font-medium disabled:opacity-50\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    )\n  }\n\n  // Desktop table layout\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n        <thead className=\"bg-gray-50 dark:bg-gray-900\">\n          <tr>\n            <th\n              className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800\"\n              onClick={() => handleSort('description')}\n            >\n              <div className=\"flex items-center\">\n                Description\n                <SortIcon column=\"description\" />\n              </div>\n            </th>\n            <th\n              className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800\"\n              onClick={() => handleSort('amount')}\n            >\n              <div className=\"flex items-center\">\n                Amount\n                <SortIcon column=\"amount\" />\n              </div>\n            </th>\n            <th\n              className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800\"\n              onClick={() => handleSort('frequency')}\n            >\n              <div className=\"flex items-center\">\n                Frequency\n                <SortIcon column=\"frequency\" />\n              </div>\n            </th>\n            <th\n              className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800\"\n              onClick={() => handleSort('next_occurrence')}\n            >\n              <div className=\"flex items-center\">\n                Next Occurrence\n                <SortIcon column=\"next_occurrence\" />\n              </div>\n            </th>\n            <th\n              className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800\"\n              onClick={() => handleSort('status')}\n            >\n              <div className=\"flex items-center\">\n                Status\n                <SortIcon column=\"status\" />\n              </div>\n            </th>\n            <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n          {sortedTransactions.map((recurring) => (\n            <tr\n              key={recurring.id}\n              className={`hover:bg-gray-50 dark:hover:bg-gray-700 ${\n                !recurring.is_active ? 'bg-gray-100 dark:bg-gray-700 opacity-60' : ''\n              }`}\n            >\n              <td className=\"px-6 py-4 text-sm text-gray-900 dark:text-gray-300\">\n                {recurring.description}\n                {recurring.merchant_pattern && (\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    Pattern: &quot;{recurring.merchant_pattern}&quot; (Â±${recurring.amount_tolerance || 0})\n                  </div>\n                )}\n              </td>\n              <td\n                className={`px-6 py-4 whitespace-nowrap text-sm font-medium ${\n                  recurring.amount < 0 ? 'text-red-600 dark:text-red-400' : 'text-green-600 dark:text-green-400'\n                }`}\n              >\n                {formatAmount(recurring.amount)}\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                {formatFrequency(recurring.frequency)}\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                {new Date(recurring.next_occurrence_date).toLocaleDateString('en-US', {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric'\n                })}\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap\">\n                {recurring.is_active ? (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                    Active\n                  </span>\n                ) : (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-600\">\n                    Paused\n                  </span>\n                )}\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-right\">\n                <div className=\"flex gap-2 justify-end\">\n                  <button\n                    onClick={() => handleToggleActive(recurring.id)}\n                    disabled={toggleActive.isPending}\n                    className=\"inline-flex items-center px-3 py-1 bg-yellow-100 text-yellow-700 rounded-lg hover:bg-yellow-200 hover:shadow-md hover:scale-105 transition-all text-xs font-medium disabled:opacity-50\"\n                  >\n                    <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                    </svg>\n                    {recurring.is_active ? 'Pause' : 'Resume'}\n                  </button>\n                  <button\n                    onClick={() => handleDelete(recurring.id)}\n                    disabled={deleteRecurring.isPending}\n                    className=\"inline-flex items-center px-3 py-1 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 hover:shadow-md hover:scale-105 transition-all text-xs font-medium disabled:opacity-50\"\n                  >\n                    <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                    </svg>\n                    Delete\n                  </button>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default function RecurringTransactionTable(props: RecurringTransactionTableProps): React.JSX.Element {\n  return (\n    <ErrorBoundary>\n      <QueryProvider>\n        <RecurringTransactionTableContent {...props} />\n      </QueryProvider>\n    </ErrorBoundary>\n  )\n}\n\n"],"names":["useRecurringTransactions","useApiQuery","getRecurringTransactions","useToggleRecurringActive","useApiMutation","id","toggleRecurringTransactionActive","useDeleteRecurringTransaction","deleteRecurringTransaction","RecurringTransactionTableContent","data","isLoading","error","toggleActive","deleteRecurring","sortColumn","setSortColumn","useState","sortDirection","setSortDirection","isMobile","useResponsive","recurringTransactions","_a","sortedTransactions","useMemo","a","b","aVal","bVal","handleSort","column","handleToggleActive","handleDelete","formatAmount","amount","formatFrequency","frequency","SortIcon","jsx","jsxs","recurring","RecurringTransactionTable","props","ErrorBoundary","QueryProvider"],"mappings":"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"}